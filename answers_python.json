{"40360187": {"last_activity_date": 1478003688, "owner": {"reputation": 4151, "display_name": "Serhii Mamontov", "user_type": "registered", "link": "http://stackoverflow.com/users/859183/serhii-mamontov", "profile_image": "https://i.stack.imgur.com/PeDMB.png?s=128&g=1", "user_id": 859183}, "is_accepted": false, "question_id": 40358208, "creation_date": 1478003688, "score": 0, "answer_id": 40360187, "body": "<p>Rak,</p>\n\n<p><em>publish</em> API designed to work with regular channels and you can't use it to publish some message to presence channel. Presence channels is only for subscription and <strong>PubNub</strong> presence service is the only one who is able to publish to them.<br>\nTo get <em>state-changed</em> presence events you need to use <em>client.setStat</em> API and pass <em>typing</em> state there for channel in which state should be shown.  </p>\n\n<p>Best regards,<br>\nSergey</p>\n"}, "21071358": {"last_activity_date": 1389501253, "owner": {"reputation": 228, "accept_rate": 14, "user_type": "registered", "link": "http://stackoverflow.com/users/2899261/aurora", "display_name": "Aurora", "profile_image": "https://www.gravatar.com/avatar/ae476e3961d8ea0622c51ff41965ff70?s=128&d=identicon&r=PG&f=1", "user_id": 2899261}, "is_accepted": true, "question_id": 21070369, "creation_date": 1389501253, "score": 13, "answer_id": 21071358, "body": "<p>Install virtualenv using <code>pip install virtualenv</code>.\nIf you have it already installed, try reinstalling it by removing it with <code>pip uninstall virtualenv</code> and then reinstalling it. \nGood Luck. </p>\n"}, "1739928": {"last_activity_date": 1258342953, "owner": {"reputation": 480895, "accept_rate": 80, "user_type": "registered", "link": "http://stackoverflow.com/users/95810/alex-martelli", "display_name": "Alex Martelli", "profile_image": "https://www.gravatar.com/avatar/e8d5fe90f1fe2148bf130cccd4dc311c?s=128&d=identicon&r=PG", "user_id": 95810}, "is_accepted": true, "question_id": 1739913, "creation_date": 1258342953, "score": 54, "answer_id": 1739928, "body": "<p>With a 64-bit Python installation, and (say) 64 GB of memory, a Python 2 string of around 63 GB should be quite feasible (if not maximally fast).  If you can upgrade your memory much beyond that (which will cost you an arm and a leg, of course), your maximum feasible strings should get proportionally longer.  (I don't recommend relying on virtual memory to extend that by much, or your runtimes will get simply ridiculous;-).</p>\n\n<p>With a typical 32-bit Python installation, of course, the total memory you can use in your application is limited to something like 2 or 3 GB (depending on OS and configuration), so the longest strings you can use will be much smaller than in 64-bit installations with ridiculously high amounts of RAM.</p>\n"}, "40351565": {"last_activity_date": 1477962068, "creation_date": 1477953349, "last_edit_date": 1477962068, "question_id": 40351474, "owner": {"reputation": 22483, "display_name": "SuperSaiyan", "user_type": "registered", "link": "http://stackoverflow.com/users/227884/supersaiyan", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/nJEtV.jpg?s=128&g=1", "user_id": 227884}, "score": 1, "answer_id": 40351565, "body": "<p><a href=\"https://pip.pypa.io/en/latest/reference/pip_install/#git\" rel=\"nofollow\"><code>pip</code> can install projects on Github as a dependency too!</a></p>\n\n<p>All you need to do is, in your <code>requirements.txt</code>, add a line like following:</p>\n\n<pre><code>..\ngit+https://github.com/c2nes/javalang.git\n</code></pre>\n\n<p>then install the dependency using:</p>\n\n<pre><code>$ pip install -r requirements.txt\n</code></pre>\n\n<hr>\n\n<p>What you are looking for exists on <a href=\"https://pypi.python.org/pypi/javalang\" rel=\"nofollow\">PyPI</a>. Instead of <code>git+https://..</code> line above, just say: <code>javalang</code>. Oh and BTW, unless <em>they</em> are running old versions of Python,  they should already have <code>pip</code> installed. If they don't use your operating systems package manager or <code>get-pip.py</code> as you said.</p>\n", "is_accepted": true}, "40320461": {"last_activity_date": 1477931421, "creation_date": 1477753647, "last_edit_date": 1477931421, "question_id": 40319532, "owner": {"reputation": 15278, "display_name": "Paul H", "user_type": "registered", "link": "http://stackoverflow.com/users/1552748/paul-h", "user_id": 1552748, "profile_image": "https://www.gravatar.com/avatar/7840b7a3579d2a7065d5c0aa804b5b92?s=128&d=identicon&r=PG", "accept_rate": 92}, "score": 1, "answer_id": 40320461, "body": "<p>It should be as simple as:</p>\n\n<pre><code>wide_df = pandas.read_excel(xlfile, sheetname, header=[0, 1, 2], index_col=[0, 1, 2, 3])\n\nlong_df = wide_df.stack().stack().stack()\n</code></pre>\n\n<p>Here's an example with a mock-up CSV file (note the 4th row to label the index and the first column to label the header levels):</p>\n\n<pre><code>from io import StringIO\nfrom textwrap import dedent\n\nimport pandas\n\nmockcsv = StringIO(dedent(\"\"\"\\\n    num,,,this1,this1,this1,this1,that1,that1,that1,that1\n    let,,,thisA,thisA,thatA,thatA,thisB,thisB,thatB,thatB\n    animal,,,cat,dog,bird,lizard,cat,dog,bird,lizard\n    a,b,c,,,,,,,,\n    a1,b1,c1,x1,x2,x3,x4,x5,x6,x7,x8\n    a1,b1,c2,y1,y2,y3,y4,y5,y6,y7,y8\n    a1,b2,c1,z1,z2,z3,z4,z5,6z,zy,z8\n\"\"\"))\n\n\nwide_df = pandas.read_csv(mockcsv, index_col=[0, 1, 2], header=[0, 1, 2])\nlong_df = wide_df.stack().stack().stack()\n</code></pre>\n\n<p>So <code>wide_df</code> looks like this:</p>\n\n<pre><code>num      this1                  that1                 \nlet      thisA     thatA        thisB     thatB       \nanimal     cat dog  bird lizard   cat dog  bird lizard\na  b  c                                               \na1 b1 c1    x1  x2    x3     x4    x5  x6    x7     x8\n      c2    y1  y2    y3     y4    y5  y6    y7     y8\n   b2 c1    z1  z2    z3     z4    z5  6z    zy     z8\n</code></pre>\n\n<p>And <code>long_df</code></p>\n\n<pre><code>a   b   c   animal  let    num  \na1  b1  c1  bird    thatA  this1    x3\n                    thatB  that1    x7\n            cat     thisA  this1    x1\n                    thisB  that1    x5\n            dog     thisA  this1    x2\n                    thisB  that1    x6\n            lizard  thatA  this1    x4\n                    thatB  that1    x8\n        c2  bird    thatA  this1    y3\n                    thatB  that1    y7\n            cat     thisA  this1    y1\n                    thisB  that1    y5\n            dog     thisA  this1    y2\n                    thisB  that1    y6\n            lizard  thatA  this1    y4\n                    thatB  that1    y8\n    b2  c1  bird    thatA  this1    z3\n                    thatB  that1    zy\n            cat     thisA  this1    z1\n                    thisB  that1    z5\n            dog     thisA  this1    z2\n                    thisB  that1    6z\n            lizard  thatA  this1    z4\n                    thatB  that1    z8\n</code></pre>\n\n<p>With literal data shown in the OP, you can get at this w/o modifying anything by doing the following:</p>\n\n<pre><code>index_names = ['a', 'b', 'c']\ncol_names = ['Level1', 'Level2', 'Level3']\ndf = (\n    pandas.read_excel('Book1.xlsx', header=[0, 1, 2], index_col=[0, 1, 2, 3])\n        .reset_index(level=0, drop=True)\n        .rename_axis(index_names, axis='index')\n        .rename_axis(col_names, axis='columns')\n        .stack()\n        .stack()\n        .stack()\n        .to_frame()\n)\n</code></pre>\n\n<p>I think the tricky part will be inspecting each of your files to figure out what <code>index_names</code> should be.</p>\n", "is_accepted": true}, "40336330": {"last_activity_date": 1477889483, "creation_date": 1477885859, "last_edit_date": 1477889483, "question_id": 40336262, "owner": {"reputation": 10389, "display_name": "maxymoo", "user_type": "registered", "link": "http://stackoverflow.com/users/839957/maxymoo", "user_id": 839957, "profile_image": "https://www.gravatar.com/avatar/3ac5824c6cc4817a754a186d6a45a08b?s=128&d=identicon&r=PG", "accept_rate": 82}, "score": 3, "answer_id": 40336330, "body": "<p>First convert your series to a dataframe with <code>to_frame</code>, then extract the hours and date with <code>s.index.strftime('%H')</code> and <code>index.date</code>. Finally pivot on these column to convert to \"wide\" format:</p>\n\n<pre><code>df = s.to_frame()\ndf['hour'] = df.index.strftime('%H')\ndf['date'] = df.index.date\ndf.pivot(columns = 'hour', index = 'date')\n</code></pre>\n", "is_accepted": true}, "40359948": {"last_activity_date": 1478003620, "owner": {"reputation": 93, "display_name": "BrunoDM", "user_type": "registered", "link": "http://stackoverflow.com/users/3385651/brunodm", "profile_image": "https://i.stack.imgur.com/9hWnY.png?s=128&g=1", "user_id": 3385651}, "body": "<p>Maybe you are look for Spring's Profile! Spring Profile allow you to determine profiles for Configurations and Beans. I think you must separate the configuration classes to have two profiles! Take a look at those examples!</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/27186124/how-to-set-a-spring-profile-to-a-package\">How to set a Spring profile to a package?</a></li>\n<li><a href=\"https://www.mkyong.com/spring/spring-profiles-example/\" rel=\"nofollow noreferrer\">https://www.mkyong.com/spring/spring-profiles-example/</a></li>\n</ul>\n\n<p>Here is the documentation:</p>\n\n<p><a href=\"http://docs.spring.io/autorepo/docs/spring-boot/current/reference/html/boot-features-profiles.html\" rel=\"nofollow noreferrer\">http://docs.spring.io/autorepo/docs/spring-boot/current/reference/html/boot-features-profiles.html</a></p>\n", "is_accepted": false, "question_id": 40359838, "creation_date": 1478002796, "score": 1, "answer_id": 40359948, "last_edit_date": 1478003620}, "40351613": {"last_activity_date": 1477953559, "owner": {"reputation": 3215, "accept_rate": 86, "user_type": "registered", "link": "http://stackoverflow.com/users/304209/dennis-golomazov", "display_name": "Dennis Golomazov", "profile_image": "https://www.gravatar.com/avatar/ac832b45e72b203d51e2d501c0e52e4f?s=128&d=identicon&r=PG", "user_id": 304209}, "is_accepted": true, "question_id": 40351287, "creation_date": 1477953559, "score": 1, "answer_id": 40351613, "body": "<p>It depends on what is considered <code>array-like</code> in Pandas. It might also be a bug in documentation.</p>\n\n<p>Pandas checks the type of <code>left_on</code> and <code>right_on</code> parameters (see <code>_maybe_make_list</code> function in pandas source), and since they are both not tuple/lists (namely, <code>q.columns</code> is <code>RangeIndex</code> and <code>r.columns</code> is <code>Index</code>), it basically does:</p>\n\n<pre><code>[q.columns] == [r.columns]\n</code></pre>\n\n<p>instead of comparing them directly, so that outputs the error.</p>\n\n<p>Documentation <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.merge.html\" rel=\"nofollow\">says</a> <code>left_on: label or list, or array-like</code>. I couldn't find a definition of <code>array-like</code> in Pandas, but in this case it seems to be limited to <code>tuple</code> or <code>list</code>.</p>\n"}, "40352035": {"last_activity_date": 1477956332, "creation_date": 1477956332, "is_accepted": true, "question_id": 40351959, "owner": {"reputation": 219045, "display_name": "alecxe", "user_type": "registered", "link": "http://stackoverflow.com/users/771848/alecxe", "user_id": 771848, "profile_image": "https://i.stack.imgur.com/2DTBv.jpg?s=128&g=1", "accept_rate": 99}, "score": 1, "answer_id": 40352035, "body": "<p>If you were to use <a href=\"http://lxml.de/tutorial.html\" rel=\"nofollow\"><code>lxml.etree</code></a>, you could've solved it via <a href=\"https://developer.mozilla.org/en-US/docs/Web/XPath/Axes/following-sibling\" rel=\"nofollow\"><code>following-sibling</code></a>:</p>\n\n<pre><code>import lxml.etree as ET\n\ntree = ET.parse(\"input.xml\")\nroot = tree.getroot()\n\nresult = {\n    test.attrib['name']: test.xpath(\"following-sibling::doc\")[0].text\n    for test in root.iter('test')\n}\nprint(result)\n</code></pre>\n\n<p>Which would print:</p>\n\n<pre><code>{'Verify Buildings Page': 'Verifies the Admin, Setup, Buildings Page'}\n</code></pre>\n"}, "40340498": {"last_activity_date": 1478003626, "owner": {"reputation": 1, "display_name": "Wolfgang Ofner", "user_type": "registered", "link": "http://stackoverflow.com/users/7094598/wolfgang-ofner", "profile_image": "https://www.gravatar.com/avatar/5f9814a72e1838dd1b18bf8f12367e5a?s=128&d=identicon&r=PG&f=1", "user_id": 7094598}, "body": "<p>I think that's what you want:</p>\n\n<pre><code>&lt;script&gt;\n    $(document)\n        .ready(function () {\n            $('#btnGoTo')\n                .click(function () {\n                    $('#loginModal').modal('toggle');\n                });\n        });\n&lt;/script&gt;\n\n&lt;button class=\"btn btn-success\" data-target=\"#loginModal\" data-toggle=\"modal\"&gt;Open modal&lt;/button&gt;\n\n&lt;div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\"&gt;\n    &lt;a id=\"btnGoTo\" class=\"btn btn-success\" href=\"#goTo\"&gt;Klick me&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;div id=\"goTo\"&gt;\n    go to text\n&lt;/div&gt;\n</code></pre>\n\n<p>When you click on the link in the modal the modal closes and the browser goes to the div with the id \"goTo\" without reloading the page.\nFor styling the modal you can use the modal-dialog, modal-content and modal-header bootstrap class</p>\n", "is_accepted": false, "question_id": 40316008, "creation_date": 1477910304, "score": 0, "answer_id": 40340498, "last_edit_date": 1478003626}, "13074597": {"last_activity_date": 1351188559, "owner": {"reputation": 2541, "accept_rate": 86, "user_type": "registered", "link": "http://stackoverflow.com/users/1205479/casper", "display_name": "casper", "profile_image": "https://www.gravatar.com/avatar/02ce2c8ea17443215c5e4df33afa046d?s=128&d=identicon&r=PG&f=1", "user_id": 1205479}, "is_accepted": true, "question_id": 13063201, "creation_date": 1351188559, "score": 5, "answer_id": 13074597, "body": "<p>Yes, but you should realise that the output image might be <em>very</em> large.  I quickly wrote the following Python code, but even a 3000 x 3000 image could not fit the output, it is just way too big due to the transformation.  Although, here is my code, I hope it will be of use to you.</p>\n\n<pre><code>import cv2\nimport numpy as np\nimport cv           #the old cv interface\n\nimg1_square_corners = np.float32([[253,211], [563,211], [563,519],[253,519]])\nimg2_quad_corners = np.float32([[234,197], [520,169], [715,483], [81,472]])\n\nh, mask = cv2.findHomography(img1_square_corners, img2_quad_corners)\nim = cv2.imread(\"image1.png\")\n</code></pre>\n\n<p>Create an output image here, I used (3000, 3000) as an example.</p>\n\n<pre><code>out_2 = cv.fromarray(np.zeros((3000,3000,3),np.uint8))\n</code></pre>\n\n<p>By using the old <code>cv</code> interface, I wrote directly to the output, and so it does not get cropped.  I tried this using the <code>cv2</code> interface, but for some reason it did not work... Maybe someone can shed some light on that?</p>\n\n<pre><code>cv.WarpPerspective(cv.fromarray(im), out_2, cv.fromarray(h))\ncv.ShowImage(\"test\", out_2)\ncv.SaveImage(\"result.png\", out_2)\ncv2.waitKey()\n</code></pre>\n\n<p>Anyway, this gives a very large image, that contains your original image 1, warped.  The entire image will be visible if you specify the output image to be large enough.  (Which might be very large indeed!)</p>\n\n<p>I hope that this code may help you.</p>\n"}, "40352579": {"last_activity_date": 1477960760, "creation_date": 1477960760, "is_accepted": true, "question_id": 40136591, "owner": {"reputation": 927, "display_name": "BAE", "user_type": "registered", "link": "http://stackoverflow.com/users/3837778/bae", "user_id": 3837778, "profile_image": "https://www.gravatar.com/avatar/12c217d346b797e1a9b4d34b9aa91dce?s=128&d=identicon&r=PG&f=1", "accept_rate": 73}, "score": 0, "answer_id": 40352579, "body": "<p>The following codes seem work. But any comments welcomed.</p>\n\n<h1>myblueprint.py</h1>\n\n<pre><code>from flask import Blueprint\n\nclass MyBlueprint(Blueprint):\n    dbconnection = None\n    def setDb( self, db ):\n        self.dbconnection = db\n</code></pre>\n\n<h1>myview.py</h1>\n\n<pre><code>my_api = MyBlueprint('my_api', __name__ )\n@my_api.route('/api/v1/yyy/&lt;para3&gt;', methods=['GET', 'OPTIONS'])\n@crossdomain(origin=\"*\")\ndef myapi(para3):\n    # codes using funnel_api.dbconnection\n</code></pre>\n\n<h1>app.py</h1>\n\n<pre><code>app = Flask(__name__)\ncassandraConnection = None\nif __name__ == '__main__':\n    my_api.setDb( cassandraConnection )\n    app.register_blueprint( my_api )\n\n    #SETUP RESOURCE AND START SERVER\n    app.run(host='0.0.0.0', port=5000, debug=True)\n</code></pre>\n"}, "40351883": {"last_activity_date": 1477955229, "owner": {"reputation": 1, "display_name": "Marcelo Barrero", "user_type": "registered", "link": "http://stackoverflow.com/users/6879831/marcelo-barrero", "profile_image": "https://www.gravatar.com/avatar/3aa0f5299c5deb6462f4fbd5c213f329?s=128&d=identicon&r=PG&f=1", "user_id": 6879831}, "is_accepted": true, "question_id": 39693682, "creation_date": 1477955229, "score": 0, "answer_id": 40351883, "body": "<p>The answer was:\nprint(uploaded_image.deletebash)\nand once you get that code:\nimgur.com/delete/</p>\n"}, "40218034": {"last_activity_date": 1477310910, "creation_date": 1477310910, "is_accepted": true, "question_id": 40218017, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 3, "answer_id": 40218034, "body": "<p>You need first convert <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html\" rel=\"nofollow\"><code>to_datetime</code></a> and then use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.month.html\" rel=\"nofollow\"><code>dt.month</code></a>:</p>\n\n<pre><code>print (pd.to_datetime(df.Date).dt.month)\n0    10\n1    10\n2     9\n3     9\nName: Date, dtype: int64\n</code></pre>\n\n<p>Another slowier solution with <code>apply</code>:</p>\n\n<pre><code>print (df.Date.apply(lambda x: x.month))\n0    10\n1    10\n2     9\n3     9\nName: Date, dtype: int64\n</code></pre>\n\n<p><strong>Timings</strong>:</p>\n\n<pre><code>#[40000 rows x 2 columns]\ndf = pd.concat([df]*10000).reset_index(drop=True)\n\nIn [292]: %timeit (df.Date.apply(lambda x: x.month))\n100 loops, best of 3: 15.8 ms per loop\n\nIn [293]: %timeit (pd.to_datetime(df.Date).dt.month)\n100 loops, best of 3: 5.44 ms per loop\n</code></pre>\n"}, "40352045": {"last_activity_date": 1477956422, "creation_date": 1477956422, "is_accepted": true, "question_id": 40351803, "owner": {"reputation": 4811, "display_name": "Larry Maccherone", "user_type": "registered", "link": "http://stackoverflow.com/users/965782/larry-maccherone", "user_id": 965782, "profile_image": "https://www.gravatar.com/avatar/ebd55d125712aeadb9df8ba78339d314?s=128&d=identicon&r=PG", "accept_rate": 83}, "score": 1, "answer_id": 40352045, "body": "<p>If it works out of the box with MongoDB, try using the MongoDB driver-level compatibility mode for DocumentDB. Since Django is designed with any database in mind, I suspect that it's not using the more esoteric aspects of MongoDB that are not supported by the MongoDB API for DocumentDB so I think there is a good chance it will work.</p>\n"}, "40360167": {"last_activity_date": 1478003631, "owner": {"reputation": 592, "accept_rate": 50, "user_type": "registered", "link": "http://stackoverflow.com/users/440166/mobius", "display_name": "Mobius", "profile_image": "https://www.gravatar.com/avatar/3880325020651bb6618686091bec6b02?s=128&d=identicon&r=PG", "user_id": 440166}, "is_accepted": false, "question_id": 40359973, "creation_date": 1478003631, "score": 0, "answer_id": 40360167, "body": "<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>(\r\nfunction() {\r\n\r\n  var trows = document.getElementById(\"mstrTable\").rows;\r\n  var selectedRow = 1;\r\n\r\n  for (var t = 1; t &lt; trows.length; ++t) {\r\n    trow = trows[t];\r\n    trow.className = t === 1 ? \"highlighted\" : \"normal\";\r\n    // generate click handler that knows the current row.\r\n    trow.onclick = clickHandler(trow); \r\n  }//end for\r\n\r\n  \r\n  function clickHandler(trow){\r\n    return function(e){\r\n      highlightRow(trow);\r\n    }\r\n  }\r\n  \r\n  function highlightRow(rowObj, index) {\r\n    rowObj = rowObj || this;\r\n    index = index || selectedRow;\r\n    trows[index].className = \"normal\";\r\n    rowObj.className = \"highlighted\";\r\n    selectedRow = rowObj.rowIndex;\r\n  }//end function\r\n\r\n  function kbNavigate(evt) {\r\n    evt = evt || window.event;\r\n    var key = evt.keyCode;\r\n    switch (key) {\r\n      case 38: // UP arrow\r\n        if(selectedRow === 1) return;\r\n        highlightRow(trows[selectedRow-1], selectedRow);\r\n        break;\r\n      case 40: // DOWN arrow\r\n        if(selectedRow === trows.length-1) return;\r\n        highlightRow(trows[selectedRow+1], selectedRow);\r\n        break;\r\n    }\r\n  }\r\n\r\n  document.onkeydown = kbNavigate;\r\n}//end function\r\n)();//end script</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>body {background: #000042;}\r\n\r\n.cas {\r\n        font-size: 20pt;\r\n        /*font-family: fixedsys, LucidaTerminal, monospace;*/\r\n        font-family: Courier, monospace;\r\n        color: Gold;\r\n}\r\n\r\ncas_h1 {\r\n        font-size: 30pt;\r\n}\r\n\r\ntable {\r\n        border-collapse: collapse;\r\n}\r\n\r\ntable, th, td {\r\n        border: 2px solid Gold;\r\n        color: Gold;\r\n        padding: 8px;\r\n\r\n}\r\n\r\ntd, th {\r\n        font-size: 20pt;\r\n        /*font-family: fixedsys, LucidaTerminal, monospace;*/\r\n        font-family: Courier, monospace;\r\n}\r\n\r\n.cont {\r\n        border: none;\r\n}\r\n\r\ntr.normal td {\r\n        color: Gold;\r\n        background-color: #000042;\r\n}\r\ntr.highlighted td {\r\n        color: black;\r\n        background-color: OliveDrab;\r\n        font-weight: bold;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;cas&lt;/title&gt;\r\n&lt;link href=\"cas.css\" rel=\"stylesheet\" type=\"text/css\"&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;\r\n&lt;p class='cas'&gt;\r\n&lt;br&gt;\r\n&lt;cas_h1&gt;CAS&lt;/cas_h1&gt;&lt;br&gt;\r\n&lt;br&gt;\r\n&lt;table class='cont'&gt;\r\n&lt;tr&gt;\r\n&lt;td class='cont'&gt;\r\n\r\n&lt;table id=\"mstrTable\"&gt;\r\n&lt;thead&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;Order&lt;/td&gt;\r\n&lt;td&gt;Customer&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/thead&gt;\r\n&lt;tbody&gt;\r\n&lt;td&gt;1234567&lt;/td&gt;\r\n&lt;td&gt;Smith&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;td&gt;1234566&lt;/td&gt;\r\n&lt;td&gt;Smith&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n\r\n&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td class='cont'&gt;\r\n&lt;button type='button' style='height: 30px;width: 80px' onclick='window.location.href=\"action1.php?order=1234567\"'&gt;Action 1&lt;/button&gt;\r\n&lt;button type='button' style='height: 30px;width: 80px' onclick='window.location.href=\"action2.php?order=1234567\"'&gt;Action 2&lt;/button&gt;\r\n&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n&lt;/p&gt;\r\n&lt;/center&gt;\r\n&lt;script type=\"text/javascript\" src=\"cas_table.js\"&gt;&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, "19845049": {"last_activity_date": 1477923474, "creation_date": 1383852941, "last_edit_date": 1477923474, "question_id": 19844985, "owner": {"reputation": 48720, "display_name": "Jeff", "user_type": "registered", "link": "http://stackoverflow.com/users/644898/jeff", "profile_image": "https://www.gravatar.com/avatar/b2833d485728ee2f603802242ebc9826?s=128&d=identicon&r=PG", "user_id": 644898}, "score": 7, "answer_id": 19845049, "body": "<p>This is a bug in 0.12. Version 0.13 fixes this (IOW, label selection, whether number or string should work when you pass a list).</p>\n\n<p>You <em>could</em> do this (uses an internal method though):</p>\n\n<pre><code>In [10]: df.iloc[df.index.get_indexer([2,7])]\nOut[10]: \n     A    B\n2  2.2  7.2\n7  1.4  6.3\n</code></pre>\n", "is_accepted": true}, "40213278": {"last_activity_date": 1477296413, "creation_date": 1477295617, "last_edit_date": 1477296413, "question_id": 40213177, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40213278, "body": "<p>You can use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.get_dummies.html\" rel=\"nofollow\"><code>pandas.get_dummies</code></a>, but first convert <code>list</code> column to new <code>DataFrame</code>:</p>\n\n<pre><code>print (pd.DataFrame(test.category.values.tolist()))\n      0     1\n0  cat1  cat2\n1  cat1  cat3\n\nprint (pd.get_dummies(pd.DataFrame(test.category.values.tolist()), prefix_sep='', prefix=''))\n   cat1  cat2  cat3\n0     1     1     0\n1     1     0     1\n</code></pre>\n\n<p>Last add column <code>name</code> by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html\" rel=\"nofollow\"><code>concat</code></a>:</p>\n\n<pre><code>print (pd.concat([pd.get_dummies(pd.DataFrame(test.category.values.tolist()),\n                                 prefix_sep='', prefix='' ), \n        test[['name']]], axis=1))\n   cat1  cat2  cat3 name\n0     1     1     0    a\n1     1     0     1    b\n</code></pre>\n\n<p>Another solution with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.get_dummies.html\" rel=\"nofollow\"><code>Series.str.get_dummies</code></a>:</p>\n\n<pre><code>print (test.category.astype(str).str.strip('[]'))\n0    'cat1', 'cat2'\n1    'cat1', 'cat3'\nName: category, dtype: object\n\ndf = test.category.astype(str).str.strip('[]').str.get_dummies(', ')\ndf.columns = df.columns.str.strip(\"'\")\nprint (df)\n   cat1  cat2  cat3\n0     1     1     0\n1     1     0     1\n\nprint (pd.concat([df, test[['name']]], axis=1))\n   cat1  cat2  cat3 name\n0     1     1     0    a\n1     1     0     1    b\n</code></pre>\n", "is_accepted": true}, "40351733": {"last_activity_date": 1477956170, "owner": {"reputation": 3215, "accept_rate": 86, "user_type": "registered", "link": "http://stackoverflow.com/users/304209/dennis-golomazov", "display_name": "Dennis Golomazov", "profile_image": "https://www.gravatar.com/avatar/ac832b45e72b203d51e2d501c0e52e4f?s=128&d=identicon&r=PG", "user_id": 304209}, "last_edit_date": 1477956170, "question_id": 40351635, "creation_date": 1477954321, "score": 1, "answer_id": 40351733, "body": "<pre><code>df = pd.DataFrame([[5,8,9,5,0], [0,1,7,6,9], [2,4,5,2,4], [2,4,7,7,9], [1,7,0,6,9]],\n                  index=['A1', 'A2', 'A3', 'B1', 'B2'],\n                  columns=['a1', 'a2', 'a3', 'b1', 'b2'])\na_cols = [col for col in df.columns if col.startswith('a')]  # or use any other criterion to select the columns\n# e.g. to select columns a51:a100, you can use something like:\n# a_cols = [col for col in df.columns if col.startswith('a') and int(col[1:]) &gt;= 51]\ndf['a'] = df[a_cols].mean(axis=1)\nprint df\n\n    a1  a2  a3  b1  b2         a \nA1   5   8   9   5   0  7.333333      \nA2   0   1   7   6   9  2.666667      \nA3   2   4   5   2   4  3.666667      \nB1   2   4   7   7   9  4.333333      \nB2   1   7   0   6   9  2.666667          \n</code></pre>\n\n<p>Another method by using <code>groupby</code>:</p>\n\n<pre><code>df.groupby(lambda col: col[0], axis=1).mean()  # or use any other function to select columns\n# e.g. to select columns a51:a100, you can use something like:\n# lambda col: col if col.startswith('a') and int(col[1:]) &gt;= 51] else 'other'\n           a    b\nA1  7.333333  2.5\nA2  2.666667  7.5\nA3  3.666667  3.0\nB1  4.333333  8.0\nB2  2.666667  7.5\n</code></pre>\n\n<p>Rows:</p>\n\n<pre><code>df['prefix'] = df.index.map(lambda x: x[0])  # or any other criterion \nprint df\n\n    a1  a2  a3  b1  b2         a prefix\nA1   5   8   9   5   0  7.333333      A\nA2   0   1   7   6   9  2.666667      A\nA3   2   4   5   2   4  3.666667      A\nB1   2   4   7   7   9  4.333333      B\nB2   1   7   0   6   9  2.666667      B\n\ndf.groupby('prefix').mean()              \n\n              a1        a2   a3        b1        b2         a\nprefix                                                       \nA       2.333333  4.333333  7.0  4.333333  4.333333  4.555556\nB       1.500000  5.500000  3.5  6.500000  9.000000  3.500000    \n</code></pre>\n", "is_accepted": true}, "40349367": {"last_activity_date": 1477942818, "creation_date": 1477942818, "is_accepted": true, "question_id": 40348733, "owner": {"reputation": 5570, "display_name": "juanpa.arrivillaga", "user_type": "registered", "link": "http://stackoverflow.com/users/5014455/juanpa-arrivillaga", "profile_image": "https://i.stack.imgur.com/JTknr.png?s=128&g=1", "user_id": 5014455}, "score": 1, "answer_id": 40349367, "body": "<p>Starting with:</p>\n\n<pre><code>In [7]: df\nOut[7]: \n    id   A   B    C    D   E\n0    1 NaN   1  NaN  1.0   1\n1    1 NaN   2  NaN  2.0   2\n2    1 NaN   3  NaN  NaN   3\n3    1 NaN   4  NaN  NaN   4\n4    1 NaN   5  NaN  NaN   5\n5    2 NaN   6  NaN  NaN   6\n6    2 NaN   7  5.0  NaN   7\n7    2 NaN   8  6.0  2.0   8\n8    2 NaN   9  NaN  NaN   9\n9    2 NaN  10  NaN  4.0  10\n10   3 NaN  11  NaN  NaN  11\n11   3 NaN  12  NaN  NaN  12\n12   3 NaN  13  NaN  NaN  13\n13   3 NaN  14  NaN  NaN  14\n14   3 NaN  15  NaN  NaN  15\n15   3 NaN  16  NaN  NaN  16\n</code></pre>\n\n<p>Here is a rather inelegant way:</p>\n\n<pre><code>In [8]: (df.groupby('id').count() &gt; 0).sum()\nOut[8]: \nA    0\nB    3\nC    1\nD    2\nE    3\ndtype: int64\n</code></pre>\n\n<p>So, simply make your base <code>DataFrame</code> as you've specified:</p>\n\n<pre><code>In [9]: counts = (df[['A','B','C','D','E']].count().sort_values(ascending=False)).to_frame(name='counts')\n\nIn [10]: counts\nOut[10]: \n   counts\nE      16\nB      16\nD       4\nC       2\nA       0\n</code></pre>\n\n<p>And then simply:</p>\n\n<pre><code>In [11]: counts['unique(id) counts'] = (df.groupby('id').count() &gt; 0).sum()\n\nIn [12]: counts\nOut[12]: \n   counts  unique(id) counts\nE      16                  3\nB      16                  3\nD       4                  2\nC       2                  1\nA       0                  0\n</code></pre>\n"}, "40352789": {"last_activity_date": 1477962525, "owner": {"reputation": 23520, "accept_rate": 50, "user_type": "registered", "link": "http://stackoverflow.com/users/4983450/psidom", "display_name": "Psidom", "profile_image": "https://www.gravatar.com/avatar/3fcbb233c639073fa9dd8a0ee8f9ee0d?s=128&d=identicon&r=PG&f=1", "user_id": 4983450}, "is_accepted": true, "question_id": 40352645, "creation_date": 1477962525, "score": 1, "answer_id": 40352789, "body": "<p>You can convert <code>values</code> data type to str and add the two data frames with <code>:</code> as separator. </p>\n\n<pre><code>values.apply(lambda col: col.astype(str)) + \" : \" + info\n\n#   a       b\n#1  0 : foo 1 : bar\n#2  7 : few 5 : tar\n</code></pre>\n"}, "40357226": {"last_activity_date": 1478003661, "owner": {"reputation": 4568, "display_name": "Andreas", "user_type": "registered", "link": "http://stackoverflow.com/users/4952806/andreas", "profile_image": "https://www.gravatar.com/avatar/a9e502578978f826337143bcd0cf612c?s=128&d=identicon&r=PG", "user_id": 4952806}, "body": "<p>You can achieve this without using the <a href=\"https://developer.mozilla.org/en/docs/Web/CSS/box-shadow\" rel=\"nofollow noreferrer\"><code>box-shadow</code></a> property on the element itself, but on the pseudo element <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::before\" rel=\"nofollow noreferrer\"><code>::before</code></a>.</p>\n\n<ul>\n<li><code>transform: skewX(60deg);</code> will make it look like the light source is coming from the side</li>\n<li><code>height: 10%;</code> will make it look like projected on the ground</li>\n<li><code>width: 70%</code> and some positioning will hide the actual element</li>\n<li>And at last <code>box-shadow: -25px -4px 4px 0 rgba(0,0,0,0.75);</code> will produce the shadow</li>\n</ul>\n\n<p>Of course for older browsers you should use vendor prefixes.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div {\r\n  position: relative;\r\n  display: inline-block;\r\n  height: 150px;\r\n  width: 150px;\r\n  background: url(//placehold.it/150x150);\r\n  margin-left: 30px;\r\n}\r\ndiv::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  z-index: -1;\r\n  bottom: 0;\r\n  left: 15px;\r\n  height: 10%;\r\n  width: 70%;\r\n  box-shadow: -25px -4px 4px 0 rgba(0,0,0,0.75);\r\n  transform: skewX(60deg);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div&gt;&lt;/div&gt;\r\n&lt;div&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", "is_accepted": false, "question_id": 40357225, "creation_date": 1477992352, "score": 3, "answer_id": 40357226, "last_edit_date": 1478003661}, "40213138": {"last_activity_date": 1477295116, "creation_date": 1477295116, "is_accepted": true, "question_id": 40210143, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40213138, "body": "<p>You can first get groups of consecutives values by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.shift.html\" rel=\"nofollow\"><code>DataFrame.shift</code></a> with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.cumsum.html\" rel=\"nofollow\"><code>DataFrame.cumsum</code></a> to <code>df1</code>:</p>\n\n<pre><code>a = df != 0\ndf1 = (a != a.shift()).cumsum()\nprint (df1)\n   a  b  c  d  e\n0  1  1  1  1  1\n1  1  2  1  2  2\n2  1  3  2  3  2\n3  1  3  3  4  2\n4  2  3  4  4  2\n5  3  3  4  4  2\n6  3  3  4  5  3\n7  3  3  5  6  4\n8  4  4  5  7  5\n9  4  5  5  7  5\n</code></pre>\n\n<p>Then <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html\" rel=\"nofollow\"><code>groupby</code></a> by columns from <code>df</code> per groups from <code>df1</code> with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.core.groupby.GroupBy.transform.html\" rel=\"nofollow\"><code>transform</code></a>:</p>\n\n<pre><code>print (df.a.groupby([df1.a]).transform('mean'))\n0    0.000000\n1    0.000000\n2    0.000000\n3    0.000000\n4    0.136868\n5    0.000000\n6    0.000000\n7    0.000000\n8    0.845951\n9    0.845951\nName: a, dtype: float64\n</code></pre>\n\n<p>If need output of all columns use list comprehension with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html\" rel=\"nofollow\"><code>concat</code></a>: </p>\n\n<pre><code>df2 = pd.concat([df[col].groupby([df1[col]]).transform('mean') for col in df], axis=1)\nprint (df2)\n          a         b         c         d         e\n0  0.000000  0.000000  0.000000  0.000000  0.976492\n1  0.000000  3.589563  0.000000  0.400287  0.000000\n2  0.000000  0.000000  0.247323  0.000000  0.000000\n3  0.000000  0.000000  0.000000  0.181612  0.000000\n4  0.136868  0.000000  0.491620  0.181612  0.000000\n5  0.000000  0.000000  0.491620  0.181612  0.000000\n6  0.000000  0.000000  0.491620  0.000000  0.039769\n7  0.000000  0.000000  0.000000  1.006561  0.000000\n8  0.845951  0.588797  0.000000  0.000000  0.454216\n9  0.845951  0.000000  0.000000  0.000000  0.454216\n</code></pre>\n"}, "40360157": {"last_activity_date": 1478003591, "owner": {"reputation": 453, "accept_rate": 100, "user_type": "registered", "link": "http://stackoverflow.com/users/1247977/tatactic", "display_name": "tatactic", "profile_image": "https://www.gravatar.com/avatar/2f5e593b4ed3bdb8aa8059804d4da37d?s=128&d=identicon&r=PG", "user_id": 1247977}, "is_accepted": false, "question_id": 40353905, "creation_date": 1478003591, "score": 0, "answer_id": 40360157, "body": "<p>I perhaps misunderstood (because of my English), but : </p>\n\n<pre><code>import flash.text.TextField;\nimport flash.text.TextFieldAutoSize;\nvar ERLQ1:Array = [\"ERLQ1\",  \"N09\u00b002.61 / E100\u00b049.11\", \"ErawanLq\"];\nvar Txt1 : TextField = new TextField();\nTxt1.autoSize=TextFieldAutoSize.CENTER;\nTxt1.type = TextFieldType.INPUT;\nTxt1.border = true;\nvar Txt2 : TextField = new TextField();\nTxt2.autoSize=TextFieldAutoSize.CENTER;\nTxt2.type = TextFieldType.INPUT;\nTxt2.border = true;\nvar Txt3 : TextField = new TextField();\nTxt3.autoSize=TextFieldAutoSize.CENTER;\nTxt3.type = TextFieldType.INPUT;\nTxt3.border = true;\naddChild(Txt1);\naddChild(Txt2);\naddChild(Txt3);\nTxt1.x = 20, y =40;\nTxt2.x = 180, y =40;\nTxt1.x = 300, y =40;\nTxt1.text = ERLQ1[0];    // is now : first part of the array as main reference (String(ERLQ1[0]).\nTxt2.text = ERLQ1[1];    // is now : String(ERLQ1[1]);\nTxt3.text = ERLQ1[2];    // is now : String(ERLQ1[2]);\n</code></pre>\n\n<p>This will display 3 TextFiels as input text like this :\n<a href=\"https://i.stack.imgur.com/ZOmtm.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZOmtm.png\" alt=\"enter image description here\"></a></p>\n\n<p>If I misunderstood your question, please tell me more about what You expect!\nBest regards.\nNicolas</p>\n"}, "40199026": {"last_activity_date": 1477232855, "creation_date": 1477190676, "last_edit_date": 1477232855, "question_id": 40198513, "owner": {"reputation": 129361, "display_name": "DSM", "user_type": "registered", "link": "http://stackoverflow.com/users/487339/dsm", "profile_image": "https://i.stack.imgur.com/WLhST.png?s=128&g=1", "user_id": 487339}, "score": 1, "answer_id": 40199026, "body": "<p>Idea #2: what's distinctive about NaNs is that they're not equal to themselves:</p>\n\n<pre><code>In [22]: df.query(\"A == A\")\nOut[22]: \n     A\n0 -1.0\n1  0.0\n2  1.0\n4  2.0\n6  3.0\n7  4.0\n</code></pre>\n\n<p>(The original idea #1 was to use <code>df.query(\"A.notnull()\")</code>, but that only worked because <code>numexpr</code> wasn't installed in that environment, which limits the usefulness of <code>query</code> in the first place.)</p>\n", "is_accepted": true}, "40359477": {"last_activity_date": 1478003645, "owner": {"reputation": 30675, "display_name": "dnoeth", "user_type": "registered", "link": "http://stackoverflow.com/users/2527905/dnoeth", "profile_image": "https://i.stack.imgur.com/aY8e6.jpg?s=128&g=1", "user_id": 2527905}, "body": "<p>There's no builtin function, but there's a common solution:</p>\n\n<p>Remove all occurences of the substring from the string and compare the length before/after: </p>\n\n<pre><code>(Char_Length(string) - Char_Length(OReplace(string, searchstr))) / Char_Length(searchstr)\n</code></pre>\n\n<p>Edit:</p>\n\n<p>For a wildcard search you can utilize REGEXP_REPLACE:</p>\n\n<pre><code>Char_Length(RegExp_Replace(RegExp_Replace(s, 'page1(.+?)page3', '#',1,0), '[^#]','',1,0))\n</code></pre>\n\n<p>For `#' use a character which is known not to be in your input string.</p>\n", "is_accepted": false, "question_id": 40359181, "creation_date": 1478001041, "score": 0, "answer_id": 40359477, "last_edit_date": 1478003645}, "40345505": {"last_activity_date": 1477928248, "creation_date": 1477928248, "is_accepted": true, "question_id": 40051478, "owner": {"reputation": 4, "display_name": "Jack Sullivan", "user_type": "registered", "link": "http://stackoverflow.com/users/7021184/jack-sullivan", "profile_image": "https://www.gravatar.com/avatar/6d19c4c1ebf6d6063d5fa2c6b8b1fbaf?s=128&d=identicon&r=PG&f=1", "user_id": 7021184}, "score": 0, "answer_id": 40345505, "body": "<pre><code>data[col_name].values.reshape(len(data), 1)\n</code></pre>\n\n<p>As given by Michael K above</p>\n"}, "40215790": {"last_activity_date": 1477303875, "creation_date": 1477303875, "is_accepted": true, "question_id": 40215699, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40215790, "body": "<p>For me works creating new <code>DataFrame</code> <code>df1</code> and then <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html\" rel=\"nofollow\"><code>concat</code></a> to original <code>df</code>:</p>\n\n<pre><code>def func(x):\n    return pd.Series({'d':{'foo':5, 'bar':10}, 'c':300})\n\ndf1 = df.apply(lambda x: func(x), axis=1)\nprint (df1)\n     c                      d\n0  300  {'bar': 10, 'foo': 5}\n1  300  {'bar': 10, 'foo': 5}\n2  300  {'bar': 10, 'foo': 5}\n\nprint (pd.concat([df[['a','b']], df1], axis=1))\n   a    b    c                      d\n0  1  100  300  {'bar': 10, 'foo': 5}\n1  2  100  300  {'bar': 10, 'foo': 5}\n2  3  100  300  {'bar': 10, 'foo': 5}\n</code></pre>\n"}, "40359749": {"last_activity_date": 1478003706, "owner": {"reputation": 61, "display_name": "Mansoor", "user_type": "registered", "link": "http://stackoverflow.com/users/6764212/mansoor", "profile_image": "https://www.gravatar.com/avatar/c23f7367fda969ba9b447fb5e5c0eb00?s=128&d=identicon&r=PG&f=1", "user_id": 6764212}, "body": "<pre><code>select * from offer \nwhere CASE WHEN [type] = 1 then condition_1\n           WHEN [type] = 2 then (condition_2 and condition_3)\n           WHEN [type] = 3 then apply condition_4 END`\n</code></pre>\n", "is_accepted": false, "question_id": 40359324, "creation_date": 1478002021, "score": 0, "answer_id": 40359749, "last_edit_date": 1478003706}, "40337733": {"last_activity_date": 1477897718, "creation_date": 1477897025, "last_edit_date": 1477897718, "question_id": 40337683, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 3, "answer_id": 40337733, "body": "<p>You need return <code>Series</code> from function:</p>\n\n<pre><code>def find_data_from_ip(x):\n    tup = (1,2,3,4)\n    return (pd.Series(tup, index=['w','x','y','z']))\n\na = pd.DataFrame({'existing':[1,2,3]})\nprint (a)\n\na[['w','x','y','z']] = a[\"existing\"].apply(lambda x: find_data_from_ip(x))\nprint (a)\n   existing  w  x  y  z\n0         1  1  2  3  4\n1         2  1  2  3  4\n2         3  1  2  3  4\n</code></pre>\n\n<p>Another solution is create <code>DataFrame</code> from column of tuples by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.from_records.html\" rel=\"nofollow\"><code>from_records</code></a> and then <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html\" rel=\"nofollow\"><code>concat</code></a> to original:</p>\n\n<pre><code>def find_data_from_ip(x):\n    tup = (1,2,3,4)\n    return (tup)\n\na = pd.DataFrame({'existing':[1,2,3]})\n#print (a)\n\nprint (a[\"existing\"].apply(lambda x: find_data_from_ip(x)))\n0    (1, 2, 3, 4)\n1    (1, 2, 3, 4)\n2    (1, 2, 3, 4)\nName: existing, dtype: object\n\na1 = pd.DataFrame.from_records(a[\"existing\"].apply(lambda x: find_data_from_ip(x))\n                                            .values\n                                            .tolist(),\n                               columns = ['w','x','y','z'])\nprint (a1)\n   w  x  y  z\n0  1  2  3  4\n1  1  2  3  4\n2  1  2  3  4\n\nprint (pd.concat([a,a1],axis=1))\n   existing  w  x  y  z\n0         1  1  2  3  4\n1         2  1  2  3  4\n2         3  1  2  3  4\n</code></pre>\n", "is_accepted": true}, "40358781": {"last_activity_date": 1478003647, "owner": {"reputation": 343, "display_name": "mrunde", "user_type": "registered", "link": "http://stackoverflow.com/users/3696443/mrunde", "profile_image": "https://i.stack.imgur.com/phk0s.jpg?s=128&g=1", "user_id": 3696443}, "body": "<p>The function <code>geocode</code> is an asynchronous function. Therefore, you get <code>undefined</code> for <code>code.lat</code> in the alert of the <code>initMap</code> function and the geocoded value in the <code>getLatLng</code> function. You can add a callback function to the parameters of the <code>getLatLng</code> function to solve your problem like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function initMap() {\n  var addr = '1600 Amphitheatre Parkway, Mountain View, CA';\n  getLatLng(addr, function(code) {\n    alert(code.lat);\n  });\n}\n\nfunction getLatLng(addr, cb) {\n  var geocoder = new google.maps.Geocoder();\n  geocoder.geocode({'address': addr }, function (results, status) {\n    var lat,lng = 0;\n      if (status == google.maps.GeocoderStatus.OK) {\n        lat = results[0].geometry.location.lat();\n        lng = results[0].geometry.location.lng();\n      }\n      cb({lat: lat, lng: lng});\n  });\n}\n</code></pre>\n", "is_accepted": false, "question_id": 40357847, "creation_date": 1477998206, "score": 0, "answer_id": 40358781, "last_edit_date": 1478003647}, "40360184": {"last_activity_date": 1478003677, "owner": {"reputation": 86, "display_name": "Izzet Yildirim", "user_type": "registered", "link": "http://stackoverflow.com/users/5892946/izzet-yildirim", "profile_image": "https://i.stack.imgur.com/jAtPz.jpg?s=128&g=1", "user_id": 5892946}, "is_accepted": false, "question_id": 40359953, "creation_date": 1478003677, "score": 0, "answer_id": 40360184, "body": "<p>What you are trying to do is actually appending a JSON data to a HTML element which is of course will not work as expected. </p>\n\n<p>Consider using a template engine like <a href=\"https://github.com/BorisMoore/jquery-tmpl\" rel=\"nofollow noreferrer\">jQuery Templates</a>. You will be able to compile a HTML template and use it to render your data whenever you need. For example:</p>\n\n<pre><code> var markup = \"&lt;li&gt;&lt;b&gt;${Name}&lt;/b&gt;(${ReleaseYear})&lt;/li&gt;\";\n\n // Compile the markup as a named template\n $.template(\"movieTemplate\", markup );\n\n // Render the template with the movies data and insert\n // the rendered HTML under the \"movieList\" element\n $.tmpl(\"movieTemplate\", movies).appendTo( \"#movieList\" );\n</code></pre>\n"}, "40204045": {"last_activity_date": 1477232923, "creation_date": 1477232923, "is_accepted": true, "question_id": 40203809, "owner": {"reputation": 28512, "display_name": "MaxU", "user_type": "registered", "link": "http://stackoverflow.com/users/5741205/maxu", "profile_image": "https://i.stack.imgur.com/SG6BE.png?s=128&g=1", "user_id": 5741205}, "score": 1, "answer_id": 40204045, "body": "<p>You can use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.map.html\" rel=\"nofollow\">map()</a> method:</p>\n\n<pre><code>In [108]: df['postcode'] = df.house_id.map(h.set_index('id')['postcode first'])\n\nIn [109]: df\nOut[109]:\n   transaction_id  house_id    date_sale  sale_price boolean_2015 postcode\n0               1         1  31 Mar 2016    \u00a3880,000         True     EC2Y\n3               4         2  31 Mar 2016    \u00a3450,000         True     EC2Y\n4               5         3  31 Mar 2016    \u00a3680,000         True      NaN\n6               7         4  31 Mar 2016  \u00a31,850,000         True      NaN\n7               8         5  31 Mar 2016    \u00a3420,000         True      NaN\n</code></pre>\n\n<p>Data:</p>\n\n<pre><code>In [110]: h\nOut[110]:\n   id                                         address  postcode postcode first\n0   1  Flat 78, Andrewes House, Barbican, London, Gre  EC2Y 8AY           EC2Y\n1   2   Flat 35, John Trundle Court, Barbican, London  EC2Y 8DJ           EC2Y\n\nIn [113]: df\nOut[113]:\n   transaction_id  house_id    date_sale  sale_price boolean_2015\n0               1         1  31 Mar 2016    \u00a3880,000         True\n3               4         2  31 Mar 2016    \u00a3450,000         True\n4               5         3  31 Mar 2016    \u00a3680,000         True\n6               7         4  31 Mar 2016  \u00a31,850,000         True\n7               8         5  31 Mar 2016    \u00a3420,000         True\n</code></pre>\n"}, "40360010": {"last_activity_date": 1478003658, "owner": {"reputation": 33816, "accept_rate": 92, "user_type": "registered", "link": "http://stackoverflow.com/users/3093378/vsoftco", "display_name": "vsoftco", "profile_image": "https://www.gravatar.com/avatar/d8214cf99b0fa33b4f7d571801914b53?s=128&d=identicon&r=PG", "user_id": 3093378}, "body": "<p>Templates are one way to go. You can try something like</p>\n\n<pre><code>#include &lt;iostream&gt;\n\nstruct A\n{\n    void f1() const\n    {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n\n    void f2() const\n    {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n};\n\nstruct B\n{\n    void f1() const\n    {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n\n    void f2() const\n    {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n};\n\ntemplate&lt;typename T&gt;\nstruct Call : T\n{\n    void f1() const\n    {\n        T::f1();\n    }\n\n    void f2() const\n    {\n        T::f2();\n    }\n};\n\nint main()\n{\n    Call&lt;A&gt; callA;\n    callA.f1();\n    callA.f2();\n\n    Call&lt;B&gt; callB;\n    callB.f1();\n    callB.f2();\n}\n</code></pre>\n\n<p><a href=\"http://coliru.stacked-crooked.com/a/b51e48928611e407\" rel=\"nofollow noreferrer\"><kbd>Live on Coliru</kbd></a></p>\n\n<p>Of course you can use a helper function to deduce the type then return a <code>Call&lt;Type&gt;</code>, like</p>\n\n<pre><code>template&lt;typename T&gt;\nCall&lt;std::decay_t&lt;T&gt;&gt; call(T&amp;&amp;)\n{\n    return {};\n}\n</code></pre>\n\n<p>which you can simply use like</p>\n\n<pre><code>A a;\ncall(a).f1();\n</code></pre>\n", "is_accepted": false, "question_id": 40359795, "creation_date": 1478003020, "score": 1, "answer_id": 40360010, "last_edit_date": 1478003658}, "40351967": {"last_activity_date": 1477955904, "owner": {"reputation": 7411, "display_name": "Peter Brittain", "user_type": "registered", "link": "http://stackoverflow.com/users/4994021/peter-brittain", "profile_image": "https://www.gravatar.com/avatar/159a6a0bd0b0b5ab92e0dc66d936cc7c?s=128&d=identicon&r=PG&f=1", "user_id": 4994021}, "is_accepted": true, "question_id": 40262823, "creation_date": 1477955904, "score": 1, "answer_id": 40351967, "body": "<p>This is totally expected.  The NFS specification is clear about use of file handles after an object (be it file or directory) has been deleted.  <a href=\"https://tools.ietf.org/html/rfc7530#section-4\" rel=\"nofollow\">Section 4</a> clearly addresses this.  For example:</p>\n\n<blockquote>\n  <p>The persistent filehandle will become stale or invalid when the file system object is removed.  When the server is presented with a persistent filehandle that refers to a deleted object, it MUST return an error of NFS4ERR_STALE.</p>\n</blockquote>\n\n<p>This is such a common problem, it even has its own entry in section A.10 of the <a href=\"http://nfs.sourceforge.net/\" rel=\"nofollow\">NFS FAQ</a>, which says one common cause of ESTALE errors is that:</p>\n\n<blockquote>\n  <p>The file handle refers to a deleted file. After a file is deleted on the server, clients don't find out until they try to access the file with a file handle they had cached from a previous LOOKUP. Using rsync or mv to replace a file while it is in use on another client is a common scenario that results in an ESTALE error.</p>\n</blockquote>\n\n<p>The expected resolution is that your client app must close and reopen the file to see what has happened.  Or, as the FAQ says:</p>\n\n<blockquote>\n  <p>... to recover from an ESTALE error, an application must close the file or directory where the error occurred, and reopen it so the NFS client can resolve the pathname again and retrieve the new file handle.</p>\n</blockquote>\n"}, "40351380": {"last_activity_date": 1477955022, "creation_date": 1477952154, "last_edit_date": 1477955022, "question_id": 40351229, "owner": {"reputation": 12436, "display_name": "Matt", "user_type": "registered", "link": "http://stackoverflow.com/users/134702/matt", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7c1594304f3515b88e31bc8888f0f593?s=128&d=identicon&r=PG", "user_id": 134702}, "score": 1, "answer_id": 40351380, "body": "<p>Where did you read your IPV4 packet definition from?<br>\nYou're interpreting the data completely wrong!</p>\n\n<p>It looks like you confused layer 2 (data link) and layer 3 (network layer) in the OSI model.  Sockets come in at layer 3.  Socket raw allows you to read the raw packets from layer 3.</p>\n\n<p>Have a look at these links:</p>\n\n<ol>\n<li><a href=\"https://en.wikipedia.org/wiki/IPv4\" rel=\"nofollow\">IPv4 packet structure</a> </li>\n<li><a href=\"https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers\" rel=\"nofollow\">List of IP Protocol Numbers</a></li>\n</ol>\n\n<p>So given this data:<br>\n<code>\\x45\\x00\\x00\\x77\\x00\\x00\\x40\\x00\\x40\\x11\\xb4\\xc0\\xc0\\xa8\\x02...</code></p>\n\n<pre><code>\\x45     = Version (IPV4) + IHL (5 32bit ints = 20 bytes)\n\\x00     = DCSP (0 - best effort) + ECN (0 - Non ECN-Capable Transport, Non-ECT)\n\\x00\\x77 = Total length (119 bytes)\n\\x00\\x00 = Identification (0)\n\\x40\\x00 = Flags (100 - MF - more fragments) + Fragment Offset (0)\n\\x40     = TTL (64 seconds)\n\\x11     = Protocol (UDP)\n\\xb4\\xc0 = Header Checksum (0xb4c0)\n\nFollowed by source IP then dest IP. You haven't given these \n  fully so I can't decode them.\n</code></pre>\n\n<p>I hope this now makes sense.</p>\n", "is_accepted": true}, "40360017": {"last_activity_date": 1478003592, "owner": {"reputation": 43, "accept_rate": 75, "user_type": "registered", "link": "http://stackoverflow.com/users/6915353/jasjeet-singh", "display_name": "Jasjeet Singh", "profile_image": "https://www.gravatar.com/avatar/b12b8a02a14df3d2503cc34c59180826?s=128&d=identicon&r=PG&f=1", "user_id": 6915353}, "body": "<p><a href=\"https://jsfiddle.net/ssznu0on/4/\" rel=\"nofollow noreferrer\">jsfiddle</a> </p>\n\n<ol>\n<li>add jquery cdn\n\n<ol start=\"2\">\n<li>change this css: </li>\n</ol></li>\n</ol>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.navigation-is-open main {\r\n  -webkit-transform: translateX(-100%);\r\n  -ms-transform: translateX(-100%);\r\n  transform: translateX(-100%);\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", "is_accepted": false, "question_id": 40359204, "creation_date": 1478003038, "score": 0, "answer_id": 40360017, "last_edit_date": 1478003592}, "40345813": {"last_activity_date": 1477929152, "creation_date": 1477929152, "is_accepted": true, "question_id": 40340729, "owner": {"reputation": 8297, "display_name": "Boud", "user_type": "registered", "link": "http://stackoverflow.com/users/624829/boud", "profile_image": "https://www.gravatar.com/avatar/95e50fdfbe4cb4f3715d82a2e7e46cb8?s=128&d=identicon&r=PG", "user_id": 624829}, "score": 0, "answer_id": 40345813, "body": "<p>An classic way is to forget your statuses are labels: instead see them as strictly increasing numbers, like started 1, in progress 2 and ended 3. With such a column you can now check the monotony of these numbers per group, then backfill until you see a disruption in monotony.</p>\n\n<p>Prepare your dataframe:</p>\n\n<pre><code>keymapping = {'STARTED':0, 'INPROGRESS':1, 'ENDED':2}\ndf['STATUS_ID'] = df.STATUS.map(keymapping)\ndf.set_index(['ID', 'DATE'], inplace=True)\ndf.sort_index(inplace=True)\n</code></pre>\n\n<p>Now, group by ID and use <code>transform</code> to get the last value of each group spread across the entire index, so that you can assign it to your dataframe as a new column:</p>\n\n<pre><code>df['STATUS_LAST'] = df.groupby(level=0, as_index=False).STATUS_ID.transform('last')\n\ndf\nOut[63]: \n                   STATUS  STATUS_ID  STATUS_LAST\nID DATE                                          \n1  2012-05-01     STARTED          0            1\n   2013-03-01       ENDED          2            1\n   2014-01-01  INPROGRESS          1            1\n2  2011-05-01     STARTED          0            1\n   2015-05-01  INPROGRESS          1            1\n3  2011-03-01     STARTED          0            0\n   2011-04-01       ENDED          2            0\n   2011-06-01  INPROGRESS          1            0\n   2011-09-01     STARTED          0            0\n</code></pre>\n\n<p>Finally, apply the backfilling by using the increasing monotony of <code>STATUS_ID</code> against last, i.e. each value of <code>STATUS_ID</code> is valid when if is lower than or equal to <code>STATUS_LAST</code>:</p>\n\n<pre><code>df.STATUS_ID = df.STATUS_ID.where(df.STATUS_ID &lt;= df.STATUS_LAST, df.STATUS_LAST)\ndf.STATUS_ID\nOut[65]: \nID  DATE      \n1   2012-05-01    0\n    2013-03-01    1\n    2014-01-01    1\n2   2011-05-01    0\n    2015-05-01    1\n3   2011-03-01    0\n    2011-04-01    0\n    2011-06-01    0\n    2011-09-01    0\n</code></pre>\n\n<p>Reverse map it to the labels and assign it to <code>STATUS</code>:</p>\n\n<pre><code>df.STATUS_ID.map({v:k for k,v in keymapping.items()})\nOut[66]: \nID  DATE      \n1   2012-05-01       STARTED\n    2013-03-01    INPROGRESS\n    2014-01-01    INPROGRESS\n2   2011-05-01       STARTED\n    2015-05-01    INPROGRESS\n3   2011-03-01       STARTED\n    2011-04-01       STARTED\n    2011-06-01       STARTED\n    2011-09-01       STARTED\nName: STATUS_ID, dtype: object\n</code></pre>\n"}, "40360163": {"last_activity_date": 1478003625, "owner": {"reputation": 506, "display_name": "MacUserT", "user_type": "registered", "link": "http://stackoverflow.com/users/3942719/macusert", "profile_image": "https://www.gravatar.com/avatar/8c629b59bf96d1fb125afae260625a38?s=128&d=identicon&r=PG&f=1", "user_id": 3942719}, "is_accepted": false, "question_id": 40358928, "creation_date": 1478003625, "score": 0, "answer_id": 40360163, "body": "<p>There are several practices for using the location manager and its delegates. Some say the best way is to implement the location manager in the application delegate, others use it in a view controller while it is controlling the model object location. </p>\n\n<p>I prefer, like Damian Dudycz proposes, to uses a separate model class for the location. For instance you define a class that provides you all the location specific information that you need for your app. This class has the necessary properties and methods needed for the location specific needs you have in your app. Next to that you enable location updates in background in your project capabilities.</p>\n\n<p>You then could end up with a class like:</p>\n\n<pre><code>class myLocationClass: NSObject, CLLocationManagerDelegate {\n\n    //Properties\n    var myLocations = [CLLocations]()\n    var myGeocodeName = \"\"\n    var myDistanceCovered = 0.0\n    var myLocationManager : CLLocationManager? //You can also make this lazy to prevent optional properties\n    var ... etc.\n</code></pre>\n\n<p>You can then put same CLLocation specific methods in this class, for instance:</p>\n\n<pre><code>func getLocationName(from location: CLLocation) {\n//Your reverse geocoding code here.\n}\n\nfunc locationManager(_ manager: CLLocationManager,         didUpdateLocations locations: [CLLocation]) {\n//Your location update stuff here.\n}\n</code></pre>\n\n<p>From your various view controllers you can now call all the public properties and methods to start updating locations, get values and stop updating locations. I've done it this way and it saves me a lot of headaches maintaining the code, since all my location code is within a single class. </p>\n\n<p>The draw back is that your class might get quite big and again difficult to maintain. For me, this has not happened yet.</p>\n\n<p>Hope this helps.</p>\n"}, "40351861": {"last_activity_date": 1477955069, "creation_date": 1477955069, "is_accepted": true, "question_id": 40351791, "owner": {"reputation": 399, "display_name": "user3030010", "user_type": "registered", "link": "http://stackoverflow.com/users/3030010/user3030010", "profile_image": "https://www.gravatar.com/avatar/41c97ca617bb8ebf436f2131091f8d3d?s=128&d=identicon&r=PG&f=1", "user_id": 3030010}, "score": 2, "answer_id": 40351861, "body": "<p>You could try something like this:</p>\n\n<pre><code>import random\nrandom.seed(hash(your_string))\nrandom.random()\n</code></pre>\n"}, "40204196": {"last_activity_date": 1477233890, "creation_date": 1477233890, "is_accepted": true, "question_id": 40204145, "owner": {"reputation": 28512, "display_name": "MaxU", "user_type": "registered", "link": "http://stackoverflow.com/users/5741205/maxu", "profile_image": "https://i.stack.imgur.com/SG6BE.png?s=128&g=1", "user_id": 5741205}, "score": 1, "answer_id": 40204196, "body": "<p>you can convert your series to DataFrame and then use <a href=\"http://pandas.pydata.org/pandas-docs/stable/indexing.html#the-query-method-experimental\" rel=\"nofollow\">.query()</a> method:</p>\n\n<pre><code>In [120]: org_counts\nOut[120]:\ndomain_a.com    79\ndomain_b.de     51\ndomain_c.de     44\ndomain_d.com    43\ndomain_e.com    38\nName: val, dtype: int64\n\nIn [121]: org_counts.to_frame('count').query(\"index in ['domain_a.com','domain_c.de','domain_e.com']\")\nOut[121]:\n              count\ndomain_a.com     79\ndomain_c.de      44\ndomain_e.com     38\n</code></pre>\n\n<p>or using <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Index.isin.html\" rel=\"nofollow\">Index.isin()</a> method and <a href=\"http://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing\" rel=\"nofollow\">boolean indexing</a>:</p>\n\n<pre><code>In [122]: domains = ['domain_a.com','domain_c.de','domain_e.com']\n\nIn [123]: org_counts[org_counts.index.isin(domains)]\nOut[123]:\ndomain_a.com    79\ndomain_c.de     44\ndomain_e.com    38\nName: val, dtype: int64\n</code></pre>\n"}, "40212007": {"last_activity_date": 1477290806, "creation_date": 1477290806, "is_accepted": true, "question_id": 40210207, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40212007, "body": "<p>You can use:</p>\n\n<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\n#sample data    \nstart = pd.to_datetime('2016-01-15')\nrng = pd.date_range(start, periods=100)\n\ndata_df = pd.DataFrame({'date': rng, 'value': range(100)})  \ndata_df.value = data_df.value * 15 / data_df.date.dt.day\nprint (data_df)\n         date        value\n0  2016-01-15     0.000000\n1  2016-01-16     0.937500\n2  2016-01-17     1.764706\n3  2016-01-18     2.500000\n4  2016-01-19     3.157895\n5  2016-01-20     3.750000\n6  2016-01-21     4.285714\n7  2016-01-22     4.772727\n8  2016-01-23     5.217391\n9  2016-01-24     5.625000\n10 2016-01-25     6.000000\n...\n...\n</code></pre>\n\n<p>If necessary convert column <code>date</code> to <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html\" rel=\"nofollow\"><code>to_datetime</code></a> and then <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.set_index.html\" rel=\"nofollow\"><code>set_index</code></a> from column <code>date</code>:</p>\n\n<pre><code>data_df.date = pd.to_datetime(data_df.date)\ndata_df.set_index('date', inplace=True)\nprint (data_df)\n                  value\ndate                   \n2016-01-15     0.000000\n2016-01-16     0.937500\n2016-01-17     1.764706\n2016-01-18     2.500000\n2016-01-19     3.157895\n2016-01-20     3.750000\n2016-01-21     4.285714\n2016-01-22     4.772727\n2016-01-23     5.217391\n2016-01-24     5.625000\n2016-01-25     6.000000\n...\n...\n</code></pre>\n\n<p>Plot <code>Series</code> <code>data_df['value']</code> by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.plot.html\" rel=\"nofollow\"><code>plot</code></a> and then set format of axis <code>x</code>:</p>\n\n<pre><code>ax = data_df['value'].plot()\n\nticklabels = data_df.index.strftime('%Y-%m-%d')\nax.xaxis.set_major_formatter(ticker.FixedFormatter(ticklabels))\nplt.show()\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/qVhy2.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/qVhy2.png\" alt=\"graph\"></a></p>\n"}, "40348227": {"last_activity_date": 1477938622, "creation_date": 1477938280, "last_edit_date": 1477938622, "question_id": 40348116, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40348227, "body": "<p>I think you need only <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_values.html\" rel=\"nofollow\"><code>DataFrame.sort_values</code></a>:</p>\n\n<pre><code>df2=df.sort_values(by=['A','C'], ascending=True)\nprint (df2)\n      A   B    C\n1   id1  11   32\n0   id1  10  101\n3   id2  13    9\n2   id2  12   10\n4   id2  14   15\n5   id2  15   15\n6   id2  16   15\n7   id2  17   15\n8   id2  18   15\n10  id3  20   36\n11  id3  21   36\n9   id3  19   40\n</code></pre>\n\n<p>And you remove rows, because by default <code>head(5)</code> - get only top <code>5</code> rows per group.</p>\n", "is_accepted": true}, "26924872": {"last_activity_date": 1415949528, "creation_date": 1415949528, "is_accepted": true, "question_id": 26924812, "owner": {"reputation": 37928, "display_name": "Ferdinand Beyer", "user_type": "registered", "link": "http://stackoverflow.com/users/34855/ferdinand-beyer", "profile_image": "https://www.gravatar.com/avatar/5a1bd79c7364ca280ec9016ffbe41d65?s=128&d=identicon&r=PG", "user_id": 34855}, "score": 9, "answer_id": 26924872, "body": "<p>The answer should be obvious: Write a function that uses <code>try...except</code> to handle the <code>KeyError</code>, then use this as the <code>key</code> argument instead of your lambda.</p>\n\n<pre><code>def extract_time(json):\n    try:\n        # Also convert to int since update_time will be string.  When comparing\n        # strings, \"10\" is smaller than \"2\".\n        return int(json['page']['update_time'])\n    except KeyError:\n        return 0\n\n# lines.sort() is more efficient than lines = lines.sorted()\nlines.sort(key=extract_time, reverse=True)\n</code></pre>\n"}, "40220505": {"last_activity_date": 1477320115, "creation_date": 1477317843, "last_edit_date": 1477320115, "question_id": 40220076, "owner": {"reputation": 386229, "display_name": "unutbu", "user_type": "registered", "link": "http://stackoverflow.com/users/190597/unutbu", "user_id": 190597, "profile_image": "https://www.gravatar.com/avatar/aabc98d5c6482ca0e1405ec97710f30a?s=128&d=identicon&r=PG&f=1", "accept_rate": 88}, "score": 3, "answer_id": 40220505, "body": "<p><code>ax.scatter</code> (at the moment) does not accept Pandas Series, but it can accept a list of Pandas Timestamps (e.g. <code>X['Dated'].tolist()</code>), or NumPy array of dtype <code>datetime64[ns]</code> (e.g. <code>X['Dated'].values</code>):</p>\n\n<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\n\nX = pd.DataFrame({'Dated': [pd.Timestamp('2012-01-03 00:00:00'),\n                            pd.Timestamp('2012-01-04 00:00:00'),\n                            pd.Timestamp('2016-10-21 00:00:00')],\n                  'Val': [95812, 101265, 93594]})\n\nfig, ax = plt.subplots()\n# ax.scatter(X['Dated'].tolist(), X['Val'], c='green', marker='.', s=200)\nax.scatter(X['Dated'].values, X['Val'], c='green', marker='.', s=200)\nplt.show()\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/YcBNK.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/YcBNK.png\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<p><a href=\"https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/axes/_axes.py#L3990\" rel=\"nofollow\">Under the hood, the <code>ax.scatter</code> method calls</a></p>\n\n<pre><code>x = self.convert_xunits(x)\ny = self.convert_yunits(y)\n</code></pre>\n\n<p>to handle date-like inputs. <code>convert_xunits</code> converts NumPy datetime64 arrays to Matplotlib datenums, but it converts Pandas timeseries to NumPy datetime64 array.</p>\n\n<p>So, when a Pandas timeseries is passed as input to <code>ax.scatter</code>, the code ends up failing when <a href=\"https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/axes/_axes.py#L4056\" rel=\"nofollow\">this line is reached</a>:</p>\n\n<pre><code>offsets = np.dstack((x, y))\n</code></pre>\n\n<p><code>np.dstack</code> tries to promote the dtypes of its inputs to one common dtype. If <code>x</code> has dtype <code>datetime64[ns]</code> and <code>y</code> has dtype <code>float64</code>, then </p>\n\n<pre><code>TypeError: invalid type promotion\n</code></pre>\n\n<p>is raised since there is no native NumPy dtype which is compatible with both.</p>\n", "is_accepted": true}, "1427303": {"last_activity_date": 1478003648, "owner": {"reputation": 21499, "accept_rate": 80, "user_type": "registered", "link": "http://stackoverflow.com/users/7625/corbin-march", "display_name": "Corbin March", "profile_image": "https://www.gravatar.com/avatar/f17131c7feaf9a92fe35323f6ec48429?s=128&d=identicon&r=PG", "user_id": 7625}, "body": "<p>Take a look at Beaker:</p>\n\n<ul>\n<li><a href=\"http://beaker.groovie.org/\" rel=\"nofollow noreferrer\">Home Page</a></li>\n<li><a href=\"http://beaker.groovie.org/caching.html#about\" rel=\"nofollow noreferrer\">Caching Documentation</a></li>\n<li><a href=\"http://www.groovie.org/blog/advanced-caching-with-django-and-beaker\" rel=\"nofollow noreferrer\">Good quick-start article about using Beaker with Django (but useful in any other apps too)</a></li>\n</ul>\n", "is_accepted": true, "question_id": 1427255, "creation_date": 1253022720, "score": 38, "answer_id": 1427303, "last_edit_date": 1478003648}, "40205246": {"last_activity_date": 1477240866, "creation_date": 1477240866, "is_accepted": true, "question_id": 40204834, "owner": {"reputation": 28512, "display_name": "MaxU", "user_type": "registered", "link": "http://stackoverflow.com/users/5741205/maxu", "profile_image": "https://i.stack.imgur.com/SG6BE.png?s=128&g=1", "user_id": 5741205}, "score": 2, "answer_id": 40205246, "body": "<p>It's bit a hack, but one can do this like this:</p>\n\n<pre><code>def my_loc(df, idx):\n    assert len(df.index[df.index.isin(idx)]) == len(idx), 'KeyError:the labels [{}] are not in the [index]'.format(idx)\n    return df.loc[idx]\n\nIn [243]: my_loc(df, idx)\n...\nskipped\n...\nAssertionError: KeyError:the labels [['b', 'xx', 'yy']] are not in the [index]\n\nIn [245]: my_loc(df, ['a','c','e'])\nOut[245]:\n    A\na  10\nc  12\ne  14\n</code></pre>\n"}, "40351354": {"last_activity_date": 1477952100, "creation_date": 1477951986, "last_edit_date": 1477952100, "question_id": 40351341, "owner": {"reputation": 219045, "display_name": "alecxe", "user_type": "registered", "link": "http://stackoverflow.com/users/771848/alecxe", "user_id": 771848, "profile_image": "https://i.stack.imgur.com/2DTBv.jpg?s=128&g=1", "accept_rate": 99}, "score": 3, "answer_id": 40351354, "body": "<p>Use the <em>custom <code>key</code> function</em> returning a <em>tuple</em> where the first item is the sum and the second is the first item of each subelement:</p>\n\n<pre><code>In [2]: sorted(a, key=lambda item: (-(item[1] + item[2]), item[0]))\nOut[2]: \n[('dog', 4, 5),\n ('house', 6, 3),\n ('boyfriend', 2, 2),\n ('cat', 1, 3),\n ('car', 1, 1),\n ('doll', 1, 1)]\n</code></pre>\n\n<p>Note that we are returning the negative sum to reverse-sort by the sum and keeping the requirement for the secondary key sort to be ascending.</p>\n", "is_accepted": true}, "40353653": {"last_activity_date": 1477970156, "creation_date": 1477970156, "is_accepted": true, "question_id": 40353519, "owner": {"reputation": 8297, "display_name": "Boud", "user_type": "registered", "link": "http://stackoverflow.com/users/624829/boud", "profile_image": "https://www.gravatar.com/avatar/95e50fdfbe4cb4f3715d82a2e7e46cb8?s=128&d=identicon&r=PG", "user_id": 624829}, "score": 1, "answer_id": 40353653, "body": "<p>Apply will pass you along the entire row with axis=1. Adjust like this assuming your two columns are called <code>initial_pop</code>and <code>growth_rate</code></p>\n\n<pre><code>def final_pop(row):\n    return row.initial_pop*math.e**(row.growth_rate*35)\n</code></pre>\n"}, "40347744": {"last_activity_date": 1477936452, "creation_date": 1477936452, "is_accepted": true, "question_id": 40347691, "owner": {"reputation": 304, "display_name": "simon", "user_type": "registered", "link": "http://stackoverflow.com/users/4313064/simon", "profile_image": "https://www.gravatar.com/avatar/a3169edbfa182bfcb5981445b46c3473?s=128&d=identicon&r=PG&f=1", "user_id": 4313064}, "score": 4, "answer_id": 40347744, "body": "<p>You don't need the loop:</p>\n\n<pre><code>ro['PN 3D'] = ro['Part No.'].apply(lambda pn: str(pn)[:3])\n</code></pre>\n"}, "40360168": {"last_activity_date": 1478003632, "owner": {"reputation": 10, "display_name": "Shamsuddin Tibriz", "user_type": "registered", "link": "http://stackoverflow.com/users/2284910/shamsuddin-tibriz", "profile_image": "https://www.gravatar.com/avatar/5782ed65d8e4ea13d43e5e07b7993ced?s=128&d=identicon&r=PG", "user_id": 2284910}, "is_accepted": false, "question_id": 40355969, "creation_date": 1478003632, "score": 0, "answer_id": 40360168, "body": "<p>Please follow the below link to enable HTTPS in spring boot application:\n<a href=\"https://www.drissamri.be/blog/java/enable-https-in-spring-boot/\" rel=\"nofollow noreferrer\">https://www.drissamri.be/blog/java/enable-https-in-spring-boot/</a>\n. </p>\n\n<p>Also please post the full stacktrace if the problem still persists.</p>\n"}, "40337507": {"last_activity_date": 1477895357, "creation_date": 1477895357, "is_accepted": true, "question_id": 40337393, "owner": {"reputation": 124, "display_name": "rmharrison", "user_type": "registered", "link": "http://stackoverflow.com/users/3684641/rmharrison", "profile_image": "https://i.stack.imgur.com/W4Oe6.jpg?s=128&g=1", "user_id": 3684641}, "score": 1, "answer_id": 40337507, "body": "<h2>TL;DR</h2>\n\n<pre><code>&gt;&gt;&gt; index = np.zeros(100)\n&gt;&gt;&gt; columns = np.zeros (15)\n</code></pre>\n\n<h2>Detail</h2>\n\n<p>You passed a tuple argument to <code>np.zeros</code>, which results in an <strong>array of arrays</strong>.</p>\n\n<pre><code>&gt;&gt;&gt; np.zeros((15,1))\narray([[ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.],\n   [ 0.]])\n</code></pre>\n\n<p>You get an error because i) each element is an array, and ii) <code>endswith</code> is not defined for arrays.</p>\n\n<p>Both <code>index</code> and <code>columns</code> take list-like (includes <code>array</code>) attributes. You don't need to worry about whether they're a 'column' or 'row' in a matrix (I presume this is why you were using tuples).</p>\n\n<p>You just want an array...</p>\n\n<pre><code>&gt;&gt;&gt; np.zeros(15)\narray([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n    0.,  0.])\n</code></pre>\n"}, "40357066": {"last_activity_date": 1477991719, "creation_date": 1477991719, "is_accepted": true, "question_id": 40357002, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40357066, "body": "<p>You can select by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.ix.html\" rel=\"nofollow\"><code>ix</code></a> and set values to <code>['IN','IN-1']</code>:</p>\n\n<pre><code>print (df)\n     id uid   gid       tstamp\n711  12  CA  CA-1  47585768600\n711  15  CA  CA-1  47585768600\n\ndf.ix[df['id'] == 12, ['uid','gid']] = ['IN','IN-1']\n\nprint (df)\n     id uid   gid       tstamp\n711  12  IN  IN-1  47585768600\n711  15  CA  CA-1  47585768600\n</code></pre>\n\n<p>Another solution with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.replace.html\" rel=\"nofollow\"><code>replace</code></a>:</p>\n\n<pre><code>df.ix[df['id'] == 12, ['uid','gid']] = \ndf.ix[df['id'] == 12, ['uid','gid']].replace({'CA':'IN'}, regex=True)\n\nprint (df)\n     id uid   gid       tstamp\n711  12  IN  IN-1  47585768600\n711  15  CA  CA-1  47585768600\n</code></pre>\n"}, "40201432": {"last_activity_date": 1477285140, "creation_date": 1477214811, "last_edit_date": 1477285140, "question_id": 40201026, "owner": {"reputation": 1017, "display_name": "Grainier", "user_type": "registered", "link": "http://stackoverflow.com/users/1805178/grainier", "user_id": 1805178, "profile_image": "https://i.stack.imgur.com/e5pz0.png?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40201432, "body": "<p>Let's assume once you load the <code>.npy</code>, the item (<code>np.load(path_to_use).item()</code>) looks similar to this;</p>\n\n<pre><code>{'user_c': 'id_003', 'user_a': 'id_001', 'user_b': 'id_002'}\n</code></pre>\n\n<p>So, if you need to come up with a DataFrame like below using above dictionary;</p>\n\n<pre><code>  user_name user_id\n0    user_c  id_003\n1    user_a  id_001\n2    user_b  id_002\n</code></pre>\n\n<p>You can use;</p>\n\n<pre><code>df = pd.DataFrame(list(x.item().iteritems()), columns=['user_name','user_id'])\n</code></pre>\n\n<hr>\n\n<p>If you have a list of dictionaries like below;</p>\n\n<pre><code>users = [{'u_name': 'user_a', 'u_id': 'id_001'}, {'u_name': 'user_b', 'u_id': 'id_002'}]\n</code></pre>\n\n<p>You can simply use</p>\n\n<pre><code>df = pd.DataFrame(users)\n</code></pre>\n\n<p>To come up with a DataFrame similar to;</p>\n\n<pre><code>     u_id  u_name\n0  id_001  user_a\n1  id_002  user_b\n</code></pre>\n\n<hr>\n\n<p>Seems like you have a dictionary similar to this;</p>\n\n<pre><code>data = {\n    'Center': [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]],\n    'Vpeak': [1.1, 2.2],\n    'ID': ['id_001', 'id_002']\n}\n</code></pre>\n\n<p>In this case, you can simply use; </p>\n\n<pre><code>df = pd.DataFrame(data)  # df = pd.DataFrame(file_dict.item()) in your case\n</code></pre>\n\n<p>To come up with a DataFrame similar to;</p>\n\n<pre><code>    Center          ID      Vpeak\n0   [0.1, 0.2, 0.3] id_001  1.1\n1   [0.4, 0.5, 0.6] id_002  2.2\n</code></pre>\n\n<hr>\n\n<p>If you have <code>ndarray</code> within the dict, do some preprocessing similar to below; and use it to create the df;</p>\n\n<pre><code>for key in data:\n    if isinstance(data[key], np.ndarray):\n        data[key] = data[key].tolist()\n\ndf = pd.DataFrame(data)\n</code></pre>\n", "is_accepted": true}, "40207621": {"last_activity_date": 1477255637, "creation_date": 1477255514, "last_edit_date": 1477255637, "question_id": 40207521, "owner": {"reputation": 1493, "display_name": "Ivan", "user_type": "registered", "link": "http://stackoverflow.com/users/1235433/ivan", "profile_image": "https://i.stack.imgur.com/8pO3c.jpg?s=128&g=1", "user_id": 1235433}, "score": 3, "answer_id": 40207621, "body": "<p>This should be the thing you're looking for</p>\n\n<pre><code>table['Date'] = table['Date'] - pd.tseries.offsets.MonthEnd()\n</code></pre>\n", "is_accepted": true}, "40216304": {"last_activity_date": 1477305392, "creation_date": 1477305392, "is_accepted": true, "question_id": 40216221, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 5, "answer_id": 40216304, "body": "<p>You can use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html\"><code>groupby</code></a> by column names and aggregate <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.core.groupby.GroupBy.sum.html\"><code>sum</code></a>:</p>\n\n<pre><code>print (df.groupby(level= 0, axis=1).sum())\n   col1  col2   id\n0     2     0  'a'\n1     1     1  'b'\n2     1     0  'c'\n</code></pre>\n"}, "40217366": {"last_activity_date": 1477308903, "creation_date": 1477308903, "is_accepted": true, "question_id": 40180949, "owner": {"reputation": 157, "display_name": "nandaloo", "user_type": "registered", "link": "http://stackoverflow.com/users/1025255/nandaloo", "user_id": 1025255, "profile_image": "https://www.gravatar.com/avatar/dccaae1b0c4faccaba94a51c4d0ff445?s=128&d=identicon&r=PG", "accept_rate": 92}, "score": 0, "answer_id": 40217366, "body": "<p>According to the <a href=\"https://docs.scipy.org/doc/numpy/user/basics.indexing.html#dealing-with-variable-numbers-of-indices-within-programs\" rel=\"nofollow\">numpy indexing documentation with variable number of indices</a>, it's possible to use a tuple (but not a list) for what I want to do:</p>\n\n<pre><code>In[141]: indexer = ('a', 'A')\nIn[142]: df1.loc[indexer]\nOut[141]: -0.25517278351855893\n</code></pre>\n"}, "40341089": {"last_activity_date": 1477992136, "creation_date": 1477912641, "last_edit_date": 1477992136, "question_id": 40340787, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40341089, "body": "<p>One possible solution with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.replace.html\" rel=\"nofollow\"><code>Series.replace</code></a>, but first need convert <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Index.to_series.html\" rel=\"nofollow\"><code>Index.to_series</code></a>:</p>\n\n<pre><code>df.index = df.index\n             .to_series()\n             .replace({pd.Timestamp('2011-10-01'): pd.Timestamp('2011-10-01 01:00:00')})\nprint (df)\n                     DATA\n2011-10-01 01:00:00     1\n2011-10-01 02:00:00     2\n2011-10-01 03:00:00     3\n</code></pre>\n\n<p>Another solution with <a href=\"http://pandas.pydata.org/pandas-docs/stable/whatsnew.html#new-index-methods\" rel=\"nofollow\"><code>Index.where</code></a> (new in <code>0.19.0</code>):</p>\n\n<pre><code>df.index = df.index.where(df.index != pd.Timestamp('2011-10-01'),\n                          [pd.Timestamp('2011-10-01 01:00:00')])\n\nprint (df)\n                     DATA\n2011-10-01 01:00:00     1\n2011-10-01 02:00:00     2\n2011-10-01 03:00:00     3\n</code></pre>\n\n<p>Solution with appending new row and remove old one by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html\" rel=\"nofollow\"><code>drop</code></a>, last <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_index.html\" rel=\"nofollow\"><code>sort_index</code></a>:</p>\n\n<pre><code>df.loc[pd.Timestamp('2011-10-01 01:00:00')] = df.loc['2011-10-01 00:00:00', 'DATA']\ndf.drop(pd.Timestamp('2011-10-01 00:00:00'), inplace=True)\ndf.sort_index(inplace=True)\nprint (df)\n                     DATA\n2011-10-01 01:00:00     1\n2011-10-01 02:00:00     2\n2011-10-01 03:00:00     3\n</code></pre>\n\n<p>Another <a href=\"http://stackoverflow.com/a/40341544/2901002\">solution</a> if need replace by value not by position:</p>\n\n<pre><code>df.index.set_value(df.index, pd.Timestamp(2011,10,1,0,0,0), pd.Timestamp(2011,10,1,1,0,0))\nprint (df)\n                     DATA\n2011-10-01 01:00:00     1\n2011-10-01 02:00:00     2\n2011-10-01 03:00:00     3\n</code></pre>\n\n<p>Last solution with converting <code>index</code> to <code>numpy array</code> from <a href=\"http://stackoverflow.com/questions/40340787/how-to-update-the-value-of-datetimeindex-of-a-single-row-in-a-pandas-dataframe#comment67967118_40341089\">comment</a>:</p>\n\n<pre><code>i = 0\ndf.index.values[i] = pd.Timestamp('2011-10-01 01:00:00')\nprint (df)          \n                     DATA\n2011-10-01 01:00:00     1\n2011-10-01 02:00:00     2\n2011-10-01 03:00:00     3\n</code></pre>\n", "is_accepted": true}, "40204421": {"last_activity_date": 1477235434, "creation_date": 1477235207, "last_edit_date": 1477235434, "question_id": 40204396, "owner": {"reputation": 1469, "display_name": "Steven G", "user_type": "registered", "link": "http://stackoverflow.com/users/5626112/steven-g", "user_id": 5626112, "profile_image": "https://www.gravatar.com/avatar/7c4f02b1ae7b6e7f262d67e428a35fa8?s=128&d=identicon&r=PG&f=1", "accept_rate": 86}, "score": 3, "answer_id": 40204421, "body": "<p>add 1, then use <code>cumprod()</code>, subtract 1 and then <code>plot()</code>.</p>\n\n<pre><code>((df + 1).cumprod() - 1).plot()\n</code></pre>\n", "is_accepted": true}, "40352716": {"last_activity_date": 1477962300, "owner": {"reputation": 1334, "display_name": "jadsq", "user_type": "registered", "link": "http://stackoverflow.com/users/5847976/jadsq", "profile_image": "https://i.stack.imgur.com/ZteJQ.jpg?s=128&g=1", "user_id": 5847976}, "last_edit_date": 1477962300, "question_id": 40352673, "creation_date": 1477961857, "score": 2, "answer_id": 40352716, "body": "<p>It looks like you are supposed to return an integer in all cases, while your code returns a list in some cases and -1 in some other.</p>\n\n<p>I think you may just return the fist result as the algorithm description doesn't seem to consider cases where solution isn't unique. So <code>return results[0]</code> instead of <code>return results</code> might fix it.</p>\n", "is_accepted": true}, "40342621": {"last_activity_date": 1477918800, "creation_date": 1477918499, "last_edit_date": 1477918800, "question_id": 40342583, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 0, "answer_id": 40342621, "body": "<p>I think you need convert column to <code>datetime</code> in both <code>Dataframes</code>, because it seems there are different <code>dtypes</code> - one is <code>datetime</code> and one is <code>object</code> (obviously <code>string</code>):</p>\n\n<pre><code>weekdaytrain.data = pd.to_datetime(weekdaytrain.data)\ntrain.data = pd.to_datetime(train.data)\n</code></pre>\n\n<hr>\n\n<pre><code>print (weekdaytrain.dtypes)\ndata                datetime64[ns]\ngiorno_settimana             int64\ndtype: object\n\nprint (train.dtypes)\ndata     object\npezzi     int64\ndtype: object\n\nnew_train = pd.merge(train,weekdaytrain, on='data',how='left')\nprint (new_train)\n         data  pezzi  giorno_settimana\n0  2014-09-01   1743               NaN\n1  2014-09-02   1483               NaN\n2  2014-09-03   1510               NaN\n3  2014-09-04   1276               NaN\n4  2014-09-05   1741               NaN\n\n#column in train is not datetime, so need converting\ntrain.data = pd.to_datetime(train.data)\nnew_train = pd.merge(train,weekdaytrain, on='data',how='left')\nprint (new_train)\n        data  pezzi  giorno_settimana\n0 2014-09-01   1743                 0\n1 2014-09-02   1483                 1\n2 2014-09-03   1510                 2\n3 2014-09-04   1276                 3\n4 2014-09-05   1741                 4\n</code></pre>\n", "is_accepted": true}, "40207074": {"last_activity_date": 1477252298, "creation_date": 1477251701, "last_edit_date": 1477252298, "question_id": 40207023, "owner": {"reputation": 1469, "display_name": "Steven G", "user_type": "registered", "link": "http://stackoverflow.com/users/5626112/steven-g", "user_id": 5626112, "profile_image": "https://www.gravatar.com/avatar/7c4f02b1ae7b6e7f262d67e428a35fa8?s=128&d=identicon&r=PG&f=1", "accept_rate": 86}, "score": 2, "answer_id": 40207074, "body": "<p>I don't know if your entire data set is built the same way as the one you are showing us but from what I can see you are searching for occurrence of 3 to 1 in the m columns which would result in a difference of -2 :</p>\n\n<pre><code>df[df['M'].diff()==-2].index\nOut[101]: Int64Index([6, 13], dtype='int64')\n</code></pre>\n\n<p>let's say your M column always increases but it can go higher than 3, you could just look for the first occurrence of a negative number such has:</p>\n\n<pre><code>df[df['M'].diff()&lt;0].index\nOut[103]: Int64Index([6, 13], dtype='int64')\n</code></pre>\n\n<p>let's say there is no pattern there you could simply do:</p>\n\n<pre><code>df[(df['M'].diff()!=0) &amp; (df['M']==1)].index\nOut[104]: Int64Index([0, 6, 13], dtype='int64')\n</code></pre>\n\n<p>this is adding index 0 because <code>.diff()</code> will return NaN for the first index of the dataframe which is <code>!=0</code> and <code>df['M'] ==0</code></p>\n", "is_accepted": true}, "40353394": {"last_activity_date": 1477967963, "creation_date": 1477967963, "is_accepted": true, "question_id": 40353079, "owner": {"reputation": 23510, "display_name": "Psidom", "user_type": "registered", "link": "http://stackoverflow.com/users/4983450/psidom", "user_id": 4983450, "profile_image": "https://www.gravatar.com/avatar/3fcbb233c639073fa9dd8a0ee8f9ee0d?s=128&d=identicon&r=PG&f=1", "accept_rate": 50}, "score": 1, "answer_id": 40353394, "body": "<p>Use <code>dtypes</code> to get the data types for all columns. Suppose I have a data frame of four columns <code>ABCD</code> as follows:</p>\n\n<pre><code>df.A.dtype\n# dtype('float64')\n\ndf.dtypes\n# A    float64\n# B    float64\n# C    float64\n# D    float64\n# dtype: object\n</code></pre>\n"}, "40204440": {"last_activity_date": 1477235338, "creation_date": 1477235338, "is_accepted": true, "question_id": 40204282, "owner": {"reputation": 304, "display_name": "simon", "user_type": "registered", "link": "http://stackoverflow.com/users/4313064/simon", "profile_image": "https://www.gravatar.com/avatar/a3169edbfa182bfcb5981445b46c3473?s=128&d=identicon&r=PG&f=1", "user_id": 4313064}, "score": 2, "answer_id": 40204440, "body": "<p>You are applying a numpy function to a pandas dataframe.</p>\n\n<p>You can convert the dataframe to a numpy array and shuffle that:</p>\n\n<pre><code> np.random.shuffle(data.values)\n</code></pre>\n\n<p>Or you can use a pandas function:</p>\n\n<pre><code>data = data.sample(len(data))\n</code></pre>\n"}, "40360173": {"last_activity_date": 1478003642, "owner": {"reputation": 13836, "display_name": "Gilad Green", "user_type": "registered", "link": "http://stackoverflow.com/users/6400526/gilad-green", "profile_image": "https://i.stack.imgur.com/pyp3g.jpg?s=128&g=1", "user_id": 6400526}, "is_accepted": false, "question_id": 40360135, "creation_date": 1478003642, "score": 0, "answer_id": 40360173, "body": "<p>In the loop condition's check a boolean value that you set to when the password is correct:</p>\n\n<pre><code>const string pass = \"Password\";            \nstring attempt;\n\nbool valid = false;\ndo\n{\n    Console.Write(\"Please enter password: \");\n    attempt = Console.ReadLine();\n\n    if (attempt == pass)\n    {\n        Console.WriteLine(\"Access granted.\");\n        valid = true;\n    }\n    else\n    {\n        Console.WriteLine(\"Access denied.\");\n    }\n} while (!valid);\n</code></pre>\n"}, "5416686": {"last_activity_date": 1478003696, "owner": {"reputation": 185006, "accept_rate": 62, "user_type": "registered", "link": "http://stackoverflow.com/users/40342/joachim-sauer", "display_name": "Joachim Sauer", "profile_image": "https://www.gravatar.com/avatar/a648ccb47bbbe9497c073315aac4d33e?s=128&d=identicon&r=PG", "user_id": 40342}, "body": "<p>Your <code>Task</code> class is pretty much the same as the <a href=\"https://github.com/google/guava/wiki\" rel=\"nofollow noreferrer\">Guava</a> class <a href=\"https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/base/Function.html\" rel=\"nofollow noreferrer\"><code>Function</code></a>. You could use that instead of defining your own one.</p>\n\n<p>An advantage of using <code>Function</code> would be that you could use the helper methods in the <a href=\"https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/base/Functions.html\" rel=\"nofollow noreferrer\"><code>Functions</code></a> class, one of which is <a href=\"https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/base/Functions.html#compose(com.google.common.base.Function,%20com.google.common.base.Function)\" rel=\"nofollow noreferrer\"><code>compose()</code></a>:</p>\n\n<pre><code>Function&lt;String,MyObject1&gt; stringToMyObject1 = ...;\nFunction&lt;MyObject1, AnotherObject&gt; myObject1ToAnotherObject = ...;\nFunction&lt;String,AnotherObject&gt; stringtoAnotherObject = Functions.compose(myObject1ToAnotherObject, stringToMyObject1);\n</code></pre>\n\n<p>Deeper chaining can be achieved by repeated calls to <code>compose()</code>.</p>\n\n<p>Even if you don't want to use Guava for some reason, you can take inspiration from this approach: chaining any two functions/task with known type arguments creates a new function/task with easily-calculated type arguments.</p>\n", "is_accepted": true, "question_id": 5416577, "creation_date": 1300956374, "score": 5, "answer_id": 5416686, "last_edit_date": 1478003696}, "40352407": {"last_activity_date": 1477959330, "owner": {"reputation": 1, "display_name": "bluescreenofdeath2016", "user_type": "registered", "link": "http://stackoverflow.com/users/7087228/bluescreenofdeath2016", "profile_image": "https://www.gravatar.com/avatar/4cdd64572d75cd721b8af7acfe5213d1?s=128&d=identicon&r=PG&f=1", "user_id": 7087228}, "is_accepted": true, "question_id": 40313647, "creation_date": 1477959330, "score": 0, "answer_id": 40352407, "body": "<p>For anyone stuck on the same problem. The issue here is that the element is not visible. Since I was unable to solve it using <strong><em>driver.execute_script</em></strong>. I found a solution by making the mouse click on the scroll bar so as to scroll it down (By pressing just below the bar itself so that it moves down). I first added a function click that clicks on an x and y position. And ran it whenever I needed a certain element to be visible.</p>\n\n<p>You can easily find x and y location by using a freeware software to do the job.</p>\n\n<pre><code>import win32api, win32con\ndef click(x,y):\n    win32api.SetCursorPos((x,y))\n    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN,x,y,0,0)\n    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP,x,y,0,0)\n</code></pre>\n"}, "40216487": {"last_activity_date": 1477306273, "creation_date": 1477305949, "last_edit_date": 1477306273, "question_id": 40214415, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40216487, "body": "<p>After long time testing with real data there is problem <code>Series</code> from list comprehension return 2 category, not one in row <code>13</code>.</p>\n\n<p>One posible solution is use <code>iloc[0]</code> for return only first item from <code>Series</code>:</p>\n\n<pre><code>df['category'] = df.device_id\n                   .apply(lambda x: pd.Series([v for k,v in d.items() if k in x]).iloc[0])\n</code></pre>\n\n<p>Another solution is remove this row by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html\" rel=\"nofollow\"><code>drop</code></a>:</p>\n\n<pre><code>find.drop(13, inplace=True)\n</code></pre>\n\n<p>Testing all problematic rows:</p>\n\n<pre><code>#custom function return list to column 'category'\ndef f(x):\n    return [v for k,v in d.items() if k in x]\ndf['category'] = df.device_id.apply(f)\nprint (df)\n\n#filter all rows where length of list is not 1\nprint (df[df.category.apply(len) != 1])\n\n#return length of problematic rows\nprint (df.ix[df.category.apply(len) != 1, 'category'].apply(len))\n</code></pre>\n", "is_accepted": true}, "40349520": {"last_activity_date": 1477952177, "creation_date": 1477943429, "last_edit_date": 1477952177, "question_id": 40349184, "owner": {"reputation": 91, "display_name": "maze88", "user_type": "registered", "link": "http://stackoverflow.com/users/6898066/maze88", "profile_image": "https://i.stack.imgur.com/kmJ7N.jpg?s=128&g=1", "user_id": 6898066}, "score": 1, "answer_id": 40349520, "body": "<p>There are a few things incorrect with your syntax, please refer to my comments in this snippet of your code:</p>\n\n<pre><code>while rolling:\n    roll_again = input(\"Ready to roll? ENTER=Roll. Q=QUIT. \")\n    if roll_again.lower() != \"q\":\n        num_rolled = roll(sides)\n        if num_rolled == \"1\" #1\n         print(\"You rolled a\", num_rolled) #2\n    else: #3\n        print(\"its not number 1\") #4\n    else:\n        rolling = False\n</code></pre>\n\n<ol>\n<li>missing a colon <code>:</code> at end of if statement.</li>\n<li>line not indented like the rest (which are 4 spaces)*.</li>\n<li>this line is not indented the same amount as its (apparent) corresponding if statement.</li>\n<li>see comment 2.</li>\n</ol>\n\n<p>I highly recommend you review your understanding of <a href=\"https://docs.python.org/release/2.5.1/ref/indentation.html\" rel=\"nofollow\">indentation</a> which is super-critical in Python.\nI'm sure you'll succeed soon!</p>\n\n<p>* <sub>Technically speaking this is not a syntax error, but I chose to mention it since it's reflective of the other mistakes that broke the code.</sub></p>\n", "is_accepted": true}, "40355231": {"last_activity_date": 1478003599, "owner": {"reputation": 61, "display_name": "Mansoor", "user_type": "registered", "link": "http://stackoverflow.com/users/6764212/mansoor", "profile_image": "https://www.gravatar.com/avatar/c23f7367fda969ba9b447fb5e5c0eb00?s=128&d=identicon&r=PG&f=1", "user_id": 6764212}, "body": "<pre><code>SELECT id,\n(SELECT Column_name FROM Information_schema.columns \nWHERE Table_name ='tableB' AND ORDINAL_POSITION = 2) as Name, obj_type as Value FROM tableB UNION\nSELECT id,\n(SELECT Column_name FROM Information_schema.columns WHERE Table_name ='tableB' AND ORDINAL_POSITION = 3) as Name,obj_status as Value FROM tableB UNION\nSELECT id,\n(SELECT Column_name FROM Information_schema.columns WHERE Table_name ='tableB' AND ORDINAL_POSITION = 4) as Name,  _language as Value FROM tableB\nORDER BY id,Name\n</code></pre>\n", "is_accepted": false, "question_id": 40349289, "creation_date": 1477982461, "score": 0, "answer_id": 40355231, "last_edit_date": 1478003599}, "40342055": {"last_activity_date": 1477916350, "creation_date": 1477916350, "is_accepted": true, "question_id": 40341715, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40342055, "body": "<p>I think you can use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html\" rel=\"nofollow\"><code>to_datetime</code></a> with <code>errors='coerce'</code> for replace bad data to <code>NaT</code> with <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.dropna.html\" rel=\"nofollow\"><code>dropna</code></a> for remove all rows where <code>NaT</code> in column <code>Time</code>:</p>\n\n<pre><code>import pandas as pd\nfrom pandas.compat import StringIO\n\ntemp=u\"\"\"===============================================================================\n2016/03/28 12:26:45 - Message\n-------------------------------------------------------------------------------\n2016/03/28 12:26:45 - Message\n2016/03/28 12:26:45 - Message\nMessage\n2016/03/28 12:26:45 - Message\n2016/03/28 12:26:46 - Message\n2016/03/28 12:26:46 - Message\n2016/03/28 12:28:30 - Message\n2016/03/28 12:28:40 - Message\n2016/03/28 12:28:40 - Message\n2016/03/28 12:28:40 - Message\n-------------------------------------------------------------------------------\n2016/03/28 12:28:40 - Message\n===============================================================================\"\"\"\n#after testing replace StringIO(temp) to filename\ndf = pd.read_csv(StringIO(temp), sep=\"\\s+-\\s+\", names = [\"Time\", \"Text\"], engine = \"python\")\n\ndf.Time = pd.to_datetime(df.Time, errors='coerce') \ndf.dropna(subset=['Time'], inplace=True)  \n</code></pre>\n\n\n\n<pre><code>print (df)\n                  Time     Text\n1  2016-03-28 12:26:45  Message\n3  2016-03-28 12:26:45  Message\n4  2016-03-28 12:26:45  Message\n6  2016-03-28 12:26:45  Message\n7  2016-03-28 12:26:46  Message\n8  2016-03-28 12:26:46  Message\n9  2016-03-28 12:28:30  Message\n10 2016-03-28 12:28:40  Message\n11 2016-03-28 12:28:40  Message\n12 2016-03-28 12:28:40  Message\n14 2016-03-28 12:28:40  Message\n</code></pre>\n"}, "40209575": {"last_activity_date": 1477272747, "creation_date": 1477272747, "is_accepted": true, "question_id": 40209247, "owner": {"reputation": 110539, "display_name": "BrenBarn", "user_type": "registered", "link": "http://stackoverflow.com/users/1427416/brenbarn", "user_id": 1427416, "profile_image": "https://i.stack.imgur.com/QWHKg.png?s=128&g=1", "accept_rate": 53}, "score": 3, "answer_id": 40209575, "body": "<p>You need to parenthesize the comparisons as <code>(df['State'] == 'TX') &amp; (df['City'] == 'Arlington')</code>.  In Python, bitwise operators like <code>&amp;</code> have a higher precedence than comparison operators like <code>==</code>.</p>\n"}, "40339932": {"last_activity_date": 1477908000, "creation_date": 1477907905, "last_edit_date": 1477908000, "question_id": 40339886, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40339932, "body": "<p>I think there is problem with different index values, so where <code>concat</code> cannot align get <code>NaN</code>:</p>\n\n<pre><code>aaa  = pd.DataFrame([0,1,0,1,0,0], columns=['prediction'], index=[4,5,8,7,10,12])\nprint(aaa)\n    prediction\n4            0\n5            1\n8            0\n7            1\n10           0\n12           0\n\nbbb  = pd.DataFrame([0,0,1,0,1,1], columns=['groundTruth'])\nprint(bbb)\n   groundTruth\n0            0\n1            0\n2            1\n3            0\n4            1\n5            1\n\nprint (pd.concat([aaa, bbb], axis=1))\n    prediction  groundTruth\n0          NaN          0.0\n1          NaN          0.0\n2          NaN          1.0\n3          NaN          0.0\n4          0.0          1.0\n5          1.0          1.0\n7          1.0          NaN\n8          0.0          NaN\n10         0.0          NaN\n12         0.0          NaN\n</code></pre>\n\n<p>Solution is <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.reset_index.html\" rel=\"nofollow\"><code>reset_index</code></a> if indexes values are not necessary:</p>\n\n<pre><code>aaa.reset_index(drop=True, inplace=True)\nbbb.reset_index(drop=True, inplace=True)\n\nprint(aaa)\n   prediction\n0           0\n1           1\n2           0\n3           1\n4           0\n5           0\n\nprint(bbb)\n   groundTruth\n0            0\n1            0\n2            1\n3            0\n4            1\n5            1\n\nprint (pd.concat([aaa, bbb], axis=1))\n   prediction  groundTruth\n0           0            0\n1           1            0\n2           0            1\n3           1            0\n4           0            1\n5           0            1\n</code></pre>\n", "is_accepted": true}, "40344379": {"last_activity_date": 1477924631, "creation_date": 1477924631, "is_accepted": true, "question_id": 40344257, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40344379, "body": "<p>I think you need <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.reindex.html\" rel=\"nofollow\"><code>reindex</code></a> by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Index.union.html\" rel=\"nofollow\"><code>union</code></a> of both <code>indexes</code>:</p>\n\n<pre><code>print (df2.index.union(df.index))\nDatetimeIndex(['2016-10-01 00:00:00', '2016-10-01 00:30:00',\n               '2016-10-01 01:00:00', '2016-10-01 01:30:00',\n               '2016-10-01 02:00:00', '2016-10-01 02:30:00',\n               '2016-10-31 00:00:00', '2016-10-31 00:30:00',\n               '2016-10-31 01:00:00', '2016-10-31 01:30:00',\n               '2016-10-31 02:00:00'],\n              dtype='datetime64[ns]', freq=None)\n\ndf = df.reindex(df2.index.union(df.index))\nprint (df)\n                     Facility  Servers  PUE\n2016-10-01 00:00:00       NaN      NaN  NaN\n2016-10-01 00:30:00       NaN      NaN  NaN\n2016-10-01 01:00:00       NaN      NaN  NaN\n2016-10-01 01:30:00       NaN      NaN  NaN\n2016-10-01 02:00:00       NaN      NaN  NaN\n2016-10-01 02:30:00       NaN      NaN  NaN\n2016-10-31 00:00:00       6.0      5.0  1.2\n2016-10-31 00:30:00       7.0      5.0  1.4\n2016-10-31 01:00:00       6.0      5.0  1.2\n2016-10-31 01:30:00       6.0      5.0  1.2\n2016-10-31 02:00:00       6.0      5.0  1.2\n</code></pre>\n"}, "40359086": {"last_activity_date": 1478003698, "owner": {"reputation": 18, "display_name": "vakho papidze", "user_type": "registered", "link": "http://stackoverflow.com/users/6805223/vakho-papidze", "profile_image": "https://lh5.googleusercontent.com/-CZD_0D8wYwM/AAAAAAAAAAI/AAAAAAAAAG0/uJE2VLshKOk/photo.jpg?sz=128", "user_id": 6805223}, "body": "<p>Do like this </p>\n\n<pre><code>&lt;div&gt;\n    &lt;input type=\"text\" ng-model=\"data.name\"&gt;\n    {{data.name}}&lt;!--getting the value here--&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Remove controller in child div and it will take current scope;</p>\n\n<p>also in controller use </p>\n\n<pre><code>$scope.data={name:\"\"};\n$scope.save= function(){\n    console.log($scope.data);\n}\n</code></pre>\n\n<p>and it will work;</p>\n", "is_accepted": false, "question_id": 40358979, "creation_date": 1477999470, "score": 0, "answer_id": 40359086, "last_edit_date": 1478003698}, "40344536": {"last_activity_date": 1477925518, "creation_date": 1477925060, "last_edit_date": 1477925518, "question_id": 40344456, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40344536, "body": "<p>You can convert <code>Series</code> to <code>numpy array</code> by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.values.html\" rel=\"nofollow\"><code>values</code></a> and then use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html\" rel=\"nofollow\"><code>DataFrame</code></a> constructor:</p>\n\n<pre><code>print (timeSeries.values.tolist())\n[{'property1': 1, 'property2': 2}, {'property1': 3, 'property2': 4}]\n\ndf = pd.DataFrame(timeSeries.values.tolist(), index=timeSeries.index)\nprint (df)\n            property1  property2\n2014-05-01          1          2\n2014-05-02          3          4\n\nprint (df['property1'])\n2014-05-01    1\n2014-05-02    3\nName: property1, dtype: int64\n\nprint (df['property2'])\n2014-05-01    2\n2014-05-02    4\nName: property2, dtype: int64\n</code></pre>\n\n<p>Another slowier solution:</p>\n\n<pre><code>print (timeSeries.apply(lambda x: x['property1'])) \n2014-05-01    1\n2014-05-02    3\ndtype: int64\n\nprint (timeSeries.apply(lambda x: x['property2'])) \n2014-05-01    2\n2014-05-02    4\ndtype: int64\n</code></pre>\n\n<p>If you created the time series yourself use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.from_dict.html\" rel=\"nofollow\"><code>DataFrame.from_dict</code></a>:</p>\n\n<pre><code>timeSeries = pd.DataFrame.from_dict({'2014-05-01': {'property1': 1, 'property2': 2},\n                                     '2014-05-02': {'property1': 3, 'property2': 4}}, \n                                      orient='index')\n\n\nprint (timeSeries) \n            property1  property2\n2014-05-01          1          2\n2014-05-02          3          4\n</code></pre>\n", "is_accepted": true}, "40214709": {"last_activity_date": 1477300853, "creation_date": 1477300545, "last_edit_date": 1477300853, "question_id": 40214647, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40214709, "body": "<p>For me works change format to <code>%Y-%m-%d %H:%M</code>:</p>\n\n<pre><code>def dateparse (timestamp):   \n    return pd.datetime.strptime(timestamp, '%Y-%m-%d %H:%M')\n</code></pre>\n\n<p>Sample:</p>\n\n<pre><code>import pandas as pd\nfrom pandas.compat import StringIO\n\ntemp=u\"\"\"40010,40015,40020,40025,40030,40035,40040,40045\n2008-11-03 00:00,786,212,779,227,220,131,680,1006\n2008-11-03 00:03,760,200,765,234,225,133,694,1063\n2008-11-03 00:06,757,205,769,237,230,136,726,1051\n2008-11-03 00:09,781,207,765,240,235,137,711,1040\n2008-11-03 00:12,759,203,751,232,225,134,717,1088\"\"\"\n#after testing replace StringIO(temp) to filename\ndef dateparse (timestamp):   \n    return pd.datetime.strptime(timestamp, '%Y-%m-%d %H:%M')\n\nglobal_data_train = pd.read_csv(StringIO(temp), \n                                sep=\",\", \n                                parse_dates=True, \n                                date_parser=dateparse, \n                                header=0, \n                                index_col=0, \n                                skip_blank_lines = True, \n                                engine='python')\nprint (global_data_train)\n                     40010  40015  40020  40025  40030  40035  40040  40045\n2008-11-03 00:00:00    786    212    779    227    220    131    680   1006\n2008-11-03 00:03:00    760    200    765    234    225    133    694   1063\n2008-11-03 00:06:00    757    205    769    237    230    136    726   1051\n2008-11-03 00:09:00    781    207    765    240    235    137    711   1040\n2008-11-03 00:12:00    759    203    751    232    225    134    717   1088\n\nprint (global_data_train.index)\nDatetimeIndex(['2008-11-03 00:00:00', '2008-11-03 00:03:00',\n               '2008-11-03 00:06:00', '2008-11-03 00:09:00',\n               '2008-11-03 00:12:00'],\n              dtype='datetime64[ns]', freq=None)\n</code></pre>\n\n<p>Also works omit <code>date_parser=dateparse</code>.</p>\n\n<pre><code>import pandas as pd\nfrom pandas.compat import StringIO\n\ntemp=u\"\"\"40010,40015,40020,40025,40030,40035,40040,40045\n2008-11-03 00:00,786,212,779,227,220,131,680,1006\n2008-11-03 00:03,760,200,765,234,225,133,694,1063\n2008-11-03 00:06,757,205,769,237,230,136,726,1051\n2008-11-03 00:09,781,207,765,240,235,137,711,1040\n2008-11-03 00:12,759,203,751,232,225,134,717,1088\"\"\"\n#after testing replace StringIO(temp) to filename\nglobal_data_train = pd.read_csv(StringIO(temp), \n                                parse_dates=True, \n                                skip_blank_lines = True)\nprint (global_data_train)\n                     40010  40015  40020  40025  40030  40035  40040  40045\n2008-11-03 00:00:00    786    212    779    227    220    131    680   1006\n2008-11-03 00:03:00    760    200    765    234    225    133    694   1063\n2008-11-03 00:06:00    757    205    769    237    230    136    726   1051\n2008-11-03 00:09:00    781    207    765    240    235    137    711   1040\n2008-11-03 00:12:00    759    203    751    232    225    134    717   1088\n\nprint (global_data_train.index)\nDatetimeIndex(['2008-11-03 00:00:00', '2008-11-03 00:03:00',\n               '2008-11-03 00:06:00', '2008-11-03 00:09:00',\n               '2008-11-03 00:12:00'],\n              dtype='datetime64[ns]', freq=None)\n</code></pre>\n", "is_accepted": true}, "40348884": {"last_activity_date": 1477941502, "creation_date": 1477940801, "last_edit_date": 1477941502, "question_id": 40348541, "owner": {"reputation": 5859, "display_name": "root", "user_type": "registered", "link": "http://stackoverflow.com/users/3339965/root", "profile_image": "https://www.gravatar.com/avatar/3ac89d084d3bc5dc083bad3ea5518f11?s=128&d=identicon&r=PG&f=1", "user_id": 3339965}, "score": 2, "answer_id": 40348884, "body": "<p>I get better performance with <code>ne</code> instead of using the actual <code>!=</code> comparison:</p>\n\n<pre><code>df['changed'] = df['ColumnB'].ne(df['ColumnB'].shift().bfill()).astype(int)\n</code></pre>\n\n<p><strong>Timings</strong></p>\n\n<p>Using the following setup to produce a larger dataframe:</p>\n\n<pre><code>df = pd.concat([df]*10**5, ignore_index=True) \n</code></pre>\n\n<p>I get the following timings:</p>\n\n<pre><code>%timeit df['ColumnB'].ne(df['ColumnB'].shift().bfill()).astype(int)\n10 loops, best of 3: 38.1 ms per loop\n\n%timeit (df.ColumnB != df.ColumnB.shift()).astype(int)\n10 loops, best of 3: 77.7 ms per loop\n\n%timeit df['ColumnB'] == df['ColumnB'].shift(1).fillna(df['ColumnB'])\n10 loops, best of 3: 99.6 ms per loop\n\n%timeit (df.ColumnB.ne(df.ColumnB.shift())).astype(int)\n10 loops, best of 3: 19.3 ms per loop\n</code></pre>\n", "is_accepted": true}, "13106017": {"last_activity_date": 1351392888, "creation_date": 1351392888, "is_accepted": true, "question_id": 13105875, "owner": {"reputation": 129361, "display_name": "DSM", "user_type": "registered", "link": "http://stackoverflow.com/users/487339/dsm", "profile_image": "https://i.stack.imgur.com/WLhST.png?s=128&g=1", "user_id": 487339}, "score": 18, "answer_id": 13106017, "body": "<p>In Python >= 2.7, you can use the <code>.bit_length()</code> method of integers:</p>\n\n<pre><code>def brute(x):\n    # determine max p such that 2^p &lt;= x\n    p = 0\n    while 2**p &lt;= x:\n        p += 1\n    return p-1\n\ndef easy(x):\n    return x.bit_length() - 1\n</code></pre>\n\n<p>which gives</p>\n\n<pre><code>&gt;&gt;&gt; brute(0), brute(2**3-1), brute(2**3)\n(-1, 2, 3)\n&gt;&gt;&gt; easy(0), easy(2**3-1), easy(2**3)\n(-1, 2, 3)\n&gt;&gt;&gt; brute(2**50-1), brute(2**50), brute(2**50+1)\n(49, 50, 50)\n&gt;&gt;&gt; easy(2**50-1), easy(2**50), easy(2**50+1)\n(49, 50, 50)\n&gt;&gt;&gt; \n&gt;&gt;&gt; all(brute(n) == easy(n) for n in range(10**6))\nTrue\n&gt;&gt;&gt; nums = (max(2**x+d, 0) for x in range(200) for d in range(-50, 50))\n&gt;&gt;&gt; all(brute(n) == easy(n) for n in nums)\nTrue\n</code></pre>\n"}, "40360128": {"last_activity_date": 1478003693, "owner": {"reputation": 493052, "accept_rate": 99, "user_type": "registered", "link": "http://stackoverflow.com/users/14860/paxdiablo", "display_name": "paxdiablo", "profile_image": "https://i.stack.imgur.com/vXG1F.png?s=128&g=1", "user_id": 14860}, "body": "<p>Something like:</p>\n\n<pre><code>^[a-zA-z0-9]*[#?$%]?[a-zA-z0-9]*$\n</code></pre>\n\n<p>should do the trick (and, depending on your regex engine, you may need to escape one or more of those special characters).</p>\n\n<p>It's basically zero or more from the \"alpha\"-type class, followed by zero or one from the \"special\"-type class, followed once again by zero or more \"alpha\".</p>\n\n<p>You can adjust what's contained in each character class as you see fit, but this is the general way to get one of something within a sea of other things.</p>\n", "is_accepted": false, "question_id": 40360081, "creation_date": 1478003499, "score": 0, "answer_id": 40360128, "last_edit_date": 1478003693}, "40336253": {"last_activity_date": 1477885176, "creation_date": 1477885176, "is_accepted": true, "question_id": 40335992, "owner": {"reputation": 10389, "display_name": "maxymoo", "user_type": "registered", "link": "http://stackoverflow.com/users/839957/maxymoo", "user_id": 839957, "profile_image": "https://www.gravatar.com/avatar/3ac5824c6cc4817a754a186d6a45a08b?s=128&d=identicon&r=PG", "accept_rate": 82}, "score": 0, "answer_id": 40336253, "body": "<p>You can use <code>pd.eval</code> which will try and use an optimised parser if it can, and also disallows <code>eval('input()')</code>.</p>\n"}, "40352173": {"last_activity_date": 1477957536, "creation_date": 1477957536, "is_accepted": true, "question_id": 40351778, "owner": {"reputation": 1625, "display_name": "mkj", "user_type": "registered", "link": "http://stackoverflow.com/users/293494/mkj", "profile_image": "https://www.gravatar.com/avatar/74d8cee09990f8002c7b372c639e28bb?s=128&d=identicon&r=PG", "user_id": 293494}, "score": 1, "answer_id": 40352173, "body": "<p>Not sure about efficiency but:</p>\n\n<pre><code>with open('lines.txt') as f:\n    original = f.read().splitlines()\n    results = set(original)\n    for o in original:\n        for r in set(results):\n            if o != r:\n                try:\n                    if o in r:\n                        results.remove(o)\n                    elif r in o:\n                        results.remove(r)\n                except KeyError:\n                    pass\n\nprint('\\n'.join(results))\n</code></pre>\n"}, "40205455": {"last_activity_date": 1477242421, "creation_date": 1477242095, "last_edit_date": 1477242421, "question_id": 40205394, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 0, "answer_id": 40205455, "body": "<p>You can first <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.replace.html\" rel=\"nofollow\"><code>replace</code></a> <code>\u00a3,</code> to empty string and then convert <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_numeric.html\" rel=\"nofollow\"><code>to_numeric</code></a> column <code>sale_price</code>. Last cast to <code>string</code> by <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.astype.html\" rel=\"nofollow\"><code>astype</code></a> if need add <code>\u00a3</code> to column <code>sale_price</code>:</p>\n\n<pre><code>data.sale_price = pd.to_numeric(data.sale_price.str.replace('[\u00a3,]',''))\naverages = data.groupby(['postcode'], as_index=False)['sale_price'].mean()\naverages.sale_price = '\u00a3' + averages.sale_price.astype(str) \nprint (averages)\n  postcode sale_price\n0     EC1Y    \u00a3680000\n1     EC2Y   \u00a31060000\n</code></pre>\n", "is_accepted": true}, "39857488": {"last_activity_date": 1477962346, "owner": {"reputation": 107, "display_name": "Preston Hager", "user_type": "registered", "link": "http://stackoverflow.com/users/5566217/preston-hager", "profile_image": "https://www.gravatar.com/avatar/5e9ddcc4f5eb409acec2d87817f420f0?s=128&d=identicon&r=PG&f=1", "user_id": 5566217}, "last_edit_date": 1477962346, "question_id": 39857297, "creation_date": 1475598667, "score": 3, "answer_id": 39857488, "body": "<p>You should use the python CSV module. Look here for more information: <a href=\"http://stackoverflow.com/questions/6916542/writing-list-of-strings-to-excel-csv-file-in-python\">Writing List of Strings to Excel CSV File in Python</a>. </p>\n\n<p>Here is an example for your problem:</p>\n\n<pre><code>import csv\nresults = []\n\n# your code... also add this to your for loop.\n    results.append([title, link])\n\ncsv_file = open(\"csv_file.csv\",'wb')\nwr = csv.writer(csv_file)\nfor row in results:\n    wr.writerow(row)\n</code></pre>\n", "is_accepted": true}, "40210939": {"last_activity_date": 1477285437, "creation_date": 1477284900, "last_edit_date": 1477285437, "question_id": 40210575, "owner": {"reputation": 1788, "display_name": "Simon", "user_type": "registered", "link": "http://stackoverflow.com/users/2605604/simon", "user_id": 2605604, "profile_image": "https://i.stack.imgur.com/RMkkr.jpg?s=128&g=1", "accept_rate": 88}, "score": 1, "answer_id": 40210939, "body": "<p>Sounds like you just want something like a cross correlation?</p>\n\n<p>I would first convert the string to a numeric representation, so replace your <code>-</code> and <code>_</code> with <code>1</code> and <code>0</code></p>\n\n<p>You can do that using a strings <code>replace</code> method (e.g. <code>signal.replace(\"-\", \"1\")</code>)</p>\n\n<p>Convert them to a list or a numpy array:</p>\n\n<pre><code>event1 = [int(x) for x in signal1]\nevent2 = [int(x) for x in signal2]\n</code></pre>\n\n<p>Then calculate the cross correlation between them:</p>\n\n<pre><code>xcor = np.correlate(event1, event2, \"full\")\n</code></pre>\n\n<p>That will give you the cross correlation value at each time lag. You just want to find the largest value, and the time lag at which it happens:</p>\n\n<pre><code>nR = max(xcor)\nmaxLag = np.argmax(xcor)  # I imported numpy as np here\n</code></pre>\n\n<p>Giving you something like:</p>\n\n<pre><code>Cross correlation value: 5\nLag: 20\n</code></pre>\n\n<p>It sounds like you're more interested in the lag value here. What the lag tells you is essentially how many time/positional shifts are required to get the maximum cross correlation value (degree of match) between your 2 signals</p>\n\n<p>You might want to take a look at the docs for <code>np.correlate</code> and <code>np.convolve</code> to determine the method (full, same, or valid) you want to use as thats determined by the length of your data and what you want to happen if your signals are different lengths</p>\n", "is_accepted": true}, "26436036": {"last_activity_date": 1413603040, "owner": {"reputation": 406, "display_name": "Bill Letson", "user_type": "registered", "link": "http://stackoverflow.com/users/955663/bill-letson", "profile_image": "https://www.gravatar.com/avatar/3c2363bee2f90ab19e1cffc4ab950977?s=128&d=identicon&r=PG", "user_id": 955663}, "is_accepted": true, "question_id": 26434123, "creation_date": 1413603040, "score": 4, "answer_id": 26436036, "body": "<p>You can try a closure:</p>\n\n<pre><code>def multi_func(functions):\n    def f(col):\n        return functions[col.name](col)\n    return f\n\ndf = pd.DataFrame(np.random.random((10, 2)), columns=['A', 'B'])\nresult = df.apply(multi_func({'A': np.mean, 'B': np.sum}))\n</code></pre>\n"}, "40352592": {"last_activity_date": 1477960876, "creation_date": 1477960876, "is_accepted": true, "question_id": 40352576, "owner": {"reputation": 7332, "display_name": "Alex Hall", "user_type": "registered", "link": "http://stackoverflow.com/users/2482744/alex-hall", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/da280aaf6b5a9e6fbdf13089d4e5fa03?s=128&d=identicon&r=PG", "user_id": 2482744}, "score": 3, "answer_id": 40352592, "body": "<pre><code>l2 = set(l2)   # for speedy lookups\nl1 = [x for i, x in enumerate(l1) if i not in l2]\n</code></pre>\n"}, "40345560": {"last_activity_date": 1477928851, "creation_date": 1477928395, "last_edit_date": 1477928851, "question_id": 40345334, "owner": {"reputation": 75082, "display_name": "Divakar", "user_type": "registered", "link": "http://stackoverflow.com/users/3293881/divakar", "user_id": 3293881, "profile_image": "https://i.stack.imgur.com/6ZYnq.jpg?s=128&g=1", "accept_rate": 20}, "score": 0, "answer_id": 40345560, "body": "<p>You could define a <code>3 x 3</code> shaped <code>2D</code> array of those scaling values and perform matrix-multiplication, like so -</p>\n\n<pre><code>scale = np.array([[1,0,0],[0,1,0],[0,0,1]])\nfrom_ABC = np.dot(vector.values.ravel()*scale,matrix)\n</code></pre>\n\n<p>Sample run -</p>\n\n<pre><code>In [901]: from_A\nOut[901]: array([[ 0.5,  0.4,  0.1]])\n\nIn [902]: from_B\nOut[902]: array([[ 0.9,  1.6,  0.5]])\n\nIn [903]: from_C\nOut[903]: array([[ 0.8,  1.3,  1.9]])\n\nIn [904]: from_ABC\nOut[904]: \narray([[ 0.5,  0.4,  0.1],\n       [ 0.9,  1.6,  0.5],\n       [ 0.8,  1.3,  1.9]])\n</code></pre>\n\n<p>Here's an alternative with <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.einsum.html\" rel=\"nofollow\"><code>np.einsum</code></a> to do all those in one step -</p>\n\n<pre><code>np.einsum('ij,ji,ik-&gt;jk',vector.values,scale,matrix)\n</code></pre>\n\n<p>Sample run -</p>\n\n<pre><code>In [915]: np.einsum('ij,ji,ik-&gt;jk',vector.values,scale,matrix)\nOut[915]: \narray([[ 0.5,  0.4,  0.1],\n       [ 0.9,  1.6,  0.5],\n       [ 0.8,  1.3,  1.9]])\n</code></pre>\n", "is_accepted": true}, "40219264": {"last_activity_date": 1477320258, "creation_date": 1477314349, "last_edit_date": 1477320258, "question_id": 40217921, "owner": {"reputation": 186, "display_name": "FLab", "user_type": "registered", "link": "http://stackoverflow.com/users/6108661/flab", "user_id": 6108661, "profile_image": "https://www.gravatar.com/avatar/3b232c9453f6369d6150071ce9f506fc?s=128&d=identicon&r=PG&f=1", "accept_rate": 50}, "score": 0, "answer_id": 40219264, "body": "<p>Based on your comment, here is the updated solution using groupby.</p>\n\n<p>For each group with same mtc_date, find the index that minimizes the absolute difference (in days) between mtc_date and plr_date.</p>\n\n<pre><code>min_indexes = mtc.groupby('mtc_date').apply(lambda x: (x['plr_date'] - x['mtc_date']).apply(lambda y: int(y.days)).abs().argmin())\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/krBIQ.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/krBIQ.png\" alt=\"enter image description here\"></a></p>\n", "is_accepted": true}, "40203363": {"last_activity_date": 1477229600, "creation_date": 1477228616, "last_edit_date": 1477229600, "question_id": 40202967, "owner": {"reputation": 733, "display_name": "Vlas Sokolov", "user_type": "registered", "link": "http://stackoverflow.com/users/4118756/vlas-sokolov", "user_id": 4118756, "profile_image": "https://lh3.googleusercontent.com/-WsLLJXUfLVg/AAAAAAAAAAI/AAAAAAAABxc/-Fll4WUcPco/photo.jpg?sz=128", "accept_rate": 100}, "score": 1, "answer_id": 40203363, "body": "<p>Have you tried replacing this line</p>\n\n<pre><code>threedee.scatter(df.index, df['H-L'], df['Close'])\n</code></pre>\n\n<p>with the following?</p>\n\n<pre><code>threedee.scatter(range(len(df.index)), df['H-L'], df['Close'])\n</code></pre>\n\n<p>You are plotting timestamps as values. It is possible that <code>matplotlib</code> doesn't understand what numerical values the timestamps carry.</p>\n\n<p>Edit: unfortunately, this workaround this workaround turns the xaxis ticks into a numberic range. But we can always set the ticks manually:</p>\n\n<pre><code>threedee.scatter(df.index, df['H-L'], df['Close'])\n\nrenderer = fig.canvas.get_renderer()\nthreedee.draw(renderer)\nold_xticks = [t.get_text() for t in threedee.xaxis.get_ticklabels()]\nnew_xticks = [df.index[int(t)].strftime(\"%Y-%m-%d\")\n               if t is not '' else '' for t in old_xticks]\nthreedee.xaxis.set_ticklabels(new_xticks)\n\nthreedee.set_xlabel('Index')\nthreedee.set_zlabel('Close')\nthreedee.set_ylabel('H-L')\n\nplt.show()\n</code></pre>\n", "is_accepted": true}, "40352593": {"last_activity_date": 1477961938, "owner": {"reputation": 49, "display_name": "Karnage", "user_type": "registered", "link": "http://stackoverflow.com/users/6924242/karnage", "profile_image": "https://www.gravatar.com/avatar/28af1e51d394d6d03ffadc5b1db0d3e6?s=128&d=identicon&r=PG&f=1", "user_id": 6924242}, "last_edit_date": 1477961938, "question_id": 40352436, "creation_date": 1477960876, "score": 0, "answer_id": 40352593, "body": "<p>This can be solved in a single line:</p>\n\n<pre><code>print sum(df.apply(lambda row: func(row[14], row[15]), axis=1))\n</code></pre>\n\n<p>Where <em>func</em> is your desired function and axis=1 ensures that the function is applied on each row as opposed to each column (which is the default).</p>\n\n<p>My solution first creates a temporary series (picture: an unattached column) that is constructed by applying a function to each row in turn. The function that is actually being applied is an anonymous function indicated by the keyword <em>lambda</em>, which takes a single input <em>row</em> and which is fed a single row at a time from the <em>apply</em> method. That anonymous function simply calls your function <em>func</em> and passes the two column values in the row.</p>\n\n<p>A Series can be summed using the <em>sum</em> function.</p>\n\n<p>Note the indexing of the columns starts at 0.</p>\n\n<p>Also note, saying for x in df: will iterate over the columns.</p>\n", "is_accepted": true}, "40360155": {"last_activity_date": 1478003590, "owner": {"reputation": 286, "display_name": "Ima", "user_type": "registered", "link": "http://stackoverflow.com/users/345721/ima", "profile_image": "https://www.gravatar.com/avatar/d3ccad0011ea5ad92e39991fa85b4281?s=128&d=identicon&r=PG", "user_id": 345721}, "is_accepted": false, "question_id": 40359393, "creation_date": 1478003590, "score": 0, "answer_id": 40360155, "body": "<p>Run this code, probably you will find error yourself</p>\n\n<pre><code>if ($source == 'editEmployeeHours')\n{\n\n    $object  = htmlentities($_POST['object'], ENT_QUOTES, \"UTF-8\");\n    $period  = htmlentities($_POST['period'], ENT_QUOTES, \"UTF-8\");\n    $m       = htmlentities($_POST['m'], ENT_QUOTES, \"UTF-8\");\n    $y       = htmlentities($_POST['y'], ENT_QUOTES, \"UTF-8\");\n    $date    = htmlentities($_POST['date'], ENT_QUOTES, \"UTF-8\");\n    $records = htmlentities($_POST['records'], ENT_QUOTES, \"UTF-8\");\n    include('inc/s.php');\n    $g       = null;\n    echo \"&lt;pre&gt;\";\n    while ($g &lt;= $records)\n    {\n        echo \"&lt;br&gt;&lt;br&gt;---------------------------------------&lt;br&gt;&lt;br&gt;\";\n        $g++;\n        $edithoursday = $personday    = $day          = null;\n        $edithoursday = htmlentities($_POST['edithoursday'][$g], ENT_QUOTES, \"UTF-8\");\n        $personday    = htmlentities($_POST['personday'][$g], ENT_QUOTES, \"UTF-8\");\n        $day          = htmlentities($_POST['day'][$g], ENT_QUOTES, \"UTF-8\");\n\n        echo \"&lt;pre&gt;\";\n        print_r(array('edithoursday' =&gt; $edithoursday, 'personday' =&gt; $personday, 'day' =&gt; $day));\n        echo \"&lt;/pre&gt;\";\n        if ($edithoursday != '')\n        {\n            $q = \"SELECT * FROM timesheets WHERE\n            day='\" . $day . \"' AND\n            person_code = '\" . $personday . \"' AND\n            object_id = '\" . $object . \"' AND\n            period_code='\" . $period . \"' AND\n            type='0'\";\n\n            echo \"&lt;pre&gt;\";\n            echo $q;\n            echo \"&lt;/pre&gt;\";\n\n            $resultd = mysqli_query($conn, $q);\n            if (!$resultd)\n            {\n                die(\"Attention! Query to show fields failed.\");\n            }\n            if (mysqli_num_rows($resultd) != 0)\n            {\n                $queryied = \"UPDATE timesheets SET \"\n                    . \"value='\" . $edithoursday . \"' \"\n                    . \"WHERE \"\n                    . \"day='\" . $day . \"' AND \"\n                    . \"person_code = '\" . $personday . \"' AND \"\n                    . \"object_id = '\" . $object . \"' AND \"\n                    . \"period_code='\" . $period . \"' AND \"\n                    . \"type='0'\";\n                echo \"&lt;pre&gt;\";\n                echo $queryied;\n                echo \"&lt;/pre&gt;\";\n                mysqli_query($conn, $queryied);\n            }\n        }\n    }\n    echo \"&lt;/pre&gt;\";\n    header(\"Location: home\");\n    die(0);\n}\n</code></pre>\n"}, "40360156": {"last_activity_date": 1478003591, "owner": {"reputation": 36572, "accept_rate": 86, "user_type": "registered", "link": "http://stackoverflow.com/users/108205/jsbueno", "display_name": "jsbueno", "profile_image": "https://www.gravatar.com/avatar/ef459127edc89cc575d80a73cd8c567a?s=128&d=identicon&r=PG", "user_id": 108205}, "is_accepted": false, "question_id": 40359831, "creation_date": 1478003591, "score": 0, "answer_id": 40360156, "body": "<p>You can jsut script GIMP itself for that. \nI don't know which plug-in you are calling 'normalmap' - or what you mean by 'height map' (height maps I know are just the grayscale version of the image) - but even if it is a third party plug-in, it should be possible to run it through the scripting interface.</p>\n\n<p>Just go to <code>plug-ins-&gt; Python-FU-&gt;console</code>  - you will be dropped to a Python prompt. Click on the \"browse\" button - then locate the plug-on you want to call. If you  click \"apply\" - the browser will paste a template for the plug-in call to the Python prompt.</p>\n\n<p>SO, prior to doing that, you may want to test the call: open a sample image, go to the Python prompt, and get a reference to the image by typing:\n<code>image = gimp.image_list()[0]</code>, then get a reference to the first layer of the image typing <code>drawable = image.layers[0]</code> . </p>\n\n<p>These should be all the data the call for your plug-in would need to be pre-created. Do as above to paste a call to your desired plug-in on the prompt. Note that the names <code>image</code> and <code>drawable</code> above are just variable names - you may chooseyour own - but these are the names that are usually pre-filled in when you pick \"apply\" from the \"Browse\" button for a procedure call.</p>\n\n<p>Once you get it working up to here, you can leverage on Python to open all images in a folder, apply the plug-in, and save them back  - you can typ e this directly on the console, or later, create a plug-in that will show up in the menus. </p>\n\n<pre><code>import os\nfor filename in os.listdir('mydir'):\n    if not filename.endswith('.png'): continue\n    name = 'mydir/' + filename\n    image = pdb.gimp_file_load(name, name)\n    pdb.plug_in_bump_map(......)  # use your plug-in here\n    outputname = 'mydir/' + name.split('.')[0] + '_normal.png'\n    pdb.gimp_file_save(image, image.layers[0], outputname, outputname)\n    pdb.gimp_image_delete(image)  # just frees the image from memory.\n</code></pre>\n\n<p>Just press   twice and the sequence will be run for an entire folder.\n(Note that if you want to run the \"bump-map\" plug-in there are several parameters that have to be replaced from variable names to the actual values you want).</p>\n\n<p>If that is what you want, and you will be using it a lot, save it as a .py file, and put that code inside a proper function to turn it into a plug-in \n - there is a fill examplee for that in my answer here:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/10998761/gimp-create-image-stack-from-all-image-files-in-folder/11022486#11022486\">GIMP: Create image stack from all image files in folder</a></p>\n"}, "40206165": {"last_activity_date": 1477246372, "creation_date": 1477245836, "last_edit_date": 1477246372, "question_id": 40205539, "owner": {"reputation": 23520, "display_name": "Psidom", "user_type": "registered", "link": "http://stackoverflow.com/users/4983450/psidom", "user_id": 4983450, "profile_image": "https://www.gravatar.com/avatar/3fcbb233c639073fa9dd8a0ee8f9ee0d?s=128&d=identicon&r=PG&f=1", "accept_rate": 50}, "score": 1, "answer_id": 40206165, "body": "<p>Here is a vectorized solution with <code>pandas.Series.where</code> method:</p>\n\n<pre><code>import numpy as np\n\nON, OFF = 14.39, 12.50\ndf['sig'] = 0                                 #  set the initial value to be 0\ndf['sig'] = (df.sig.where(df.value &lt; ON, 1)   #  if value &gt; ON, set it 1\n                   .where((df.value &lt; OFF) | (df.value &gt; ON), np.nan)  \n                                              #  if value &lt; ON, and value &gt; OFF, set it nan\n                   .ffill().fillna(0))        # forward fill the nan value as they depend \n                                              # on their previous state, and fill initial \n                                              # value as 0\ndf\n\n#           value   sig\n#2016-09-21 13.30     0\n#2016-09-22 12.02     0\n#2016-09-23 12.28     0\n#2016-09-26 14.50     1\n#2016-09-27 13.10     1\n#2016-09-28 12.39     0\n#2016-09-29 14.02     0\n</code></pre>\n\n<p>A similar <code>np.where()</code> method with maybe clearer intention\uff1a</p>\n\n<pre><code>import numpy as np\ndf['sig'] = np.where(df.value &gt; ON, 1, np.where(df.value &lt; OFF, 0, np.nan))\ndf['sig'] = df.sig.ffill().fillna(0) \n</code></pre>\n", "is_accepted": true}, "11786282": {"last_activity_date": 1343943998, "owner": {"reputation": 666, "display_name": "JonathanV", "user_type": "registered", "link": "http://stackoverflow.com/users/1572630/jonathanv", "profile_image": "https://www.gravatar.com/avatar/4e9f5cf7880f1643e0a37d9a3a4c3a8d?s=128&d=identicon&r=PG", "user_id": 1572630}, "is_accepted": true, "question_id": 11786157, "creation_date": 1343943998, "score": 47, "answer_id": 11786282, "body": "<p>Could it be more useful for you to use the length of the list <code>len(n)</code> to inform your decision rather than checking n[i] for each possible length? </p>\n"}, "40360161": {"last_activity_date": 1478003623, "owner": {"reputation": 252, "display_name": "Eugene Tsakh", "user_type": "registered", "link": "http://stackoverflow.com/users/4211005/eugene-tsakh", "profile_image": "https://i.stack.imgur.com/tgkFw.jpg?s=128&g=1", "user_id": 4211005}, "is_accepted": false, "question_id": 40360138, "creation_date": 1478003623, "score": 0, "answer_id": 40360161, "body": "<p>It's because you need to pass function as event handler but you call this function instead of passing.</p>\n\n<p>This should work:</p>\n\n<pre><code>$(\"#to-my-account\").on(\"click\", firstScanStatIncrement.bind(window, \"account_page\"));\n</code></pre>\n"}, "40351701": {"last_activity_date": 1477954799, "owner": {"reputation": 35640, "accept_rate": 92, "user_type": "registered", "link": "http://stackoverflow.com/users/298607/dawg", "display_name": "dawg", "profile_image": "https://i.stack.imgur.com/DVW9g.jpg?s=128&g=1", "user_id": 298607}, "last_edit_date": 1477954799, "question_id": 40351253, "creation_date": 1477954141, "score": 1, "answer_id": 40351701, "body": "<p>If you want to group by the same character, you can use <a href=\"https://docs.python.org/2/library/itertools.html#itertools.groupby\" rel=\"nofollow\">groupby</a> to do this:</p>\n\n<pre><code>&gt;&gt;&gt; from itertools import groupby\n&gt;&gt;&gt; list1 = ['AAAABBBBCCCC','DDDDEEEEFFFF','GGGGHHHHIIII','JJJJKKKKLLLL']\n&gt;&gt;&gt; [[''.join(g) for k,g in groupby(sl)] for sl in list1]\n[['AAAA', 'BBBB', 'CCCC'], ['DDDD', 'EEEE', 'FFFF'], ['GGGG', 'HHHH', 'IIII'], ['JJJJ', 'KKKK', 'LLLL']]\n</code></pre>\n\n<p>If you partitioning is by length vs by character, you can do:</p>\n\n<pre><code>&gt;&gt;&gt; n=4\n&gt;&gt;&gt; [[s[i:i+n] for i in range(0, len(s), n)] for s in list1]\n[['AAAA', 'BBBB', 'CCCC'], ['DDDD', 'EEEE', 'FFFF'], ['GGGG', 'HHHH', 'IIII'], ['JJJJ', 'KKKK', 'LLLL']]\n</code></pre>\n", "is_accepted": true}, "40360164": {"last_activity_date": 1478003626, "owner": {"reputation": 1031, "display_name": "UKMonkey", "user_type": "registered", "link": "http://stackoverflow.com/users/6387170/ukmonkey", "profile_image": "https://www.gravatar.com/avatar/2d425edf9cc20e61c8cc3be162915f06?s=128&d=identicon&r=PG&f=1", "user_id": 6387170}, "is_accepted": false, "question_id": 40359678, "creation_date": 1478003626, "score": 0, "answer_id": 40360164, "body": "<p>You have multiple threads trying to change parameters of the (static) terminal at the same time:  </p>\n\n<pre><code>tcgetattr(STDIN_FILENO, &amp;old_term_attr);\nnew_term_attr = old_term_attr;\nnew_term_attr.c_lflag &amp;= ~(ICANON | ECHO);\ntcsetattr(STDIN_FILENO, TCSANOW, &amp;new_term_attr);\n</code></pre>\n\n<p>Without this being locked, your terminal attributes are completely random.\nThe fixes are to either protect this with a mutex, or if you spawn another thread to read the keyboard and set a flag for when 'q' has been pressed; which your other threads can read, you can do something like</p>\n\n<pre><code>(pardon the psudo code)\nbool shouldRun = true\n\n\nvoid captureThreadMain {\n    while (shouldRun) {\n        captureFrame();\n    }\n}\n\nvoid keyboardPressMain {\n    while (getKey('q'));\n    shouldRun = false;\n}\n</code></pre>\n\n<p>This will mean that you only need to press 'q' once to stop all your frame collecting threads.</p>\n"}, "40207401": {"last_activity_date": 1477253842, "creation_date": 1477253842, "is_accepted": true, "question_id": 40207346, "owner": {"reputation": 386229, "display_name": "unutbu", "user_type": "registered", "link": "http://stackoverflow.com/users/190597/unutbu", "user_id": 190597, "profile_image": "https://www.gravatar.com/avatar/aabc98d5c6482ca0e1405ec97710f30a?s=128&d=identicon&r=PG&f=1", "accept_rate": 88}, "score": 2, "answer_id": 40207401, "body": "<pre><code>row_sum = df.sum(axis=1)\ntotal_sum = row_sum.sum()\nprint(df.loc[row_sum/total_sum &gt; 0.01])\n</code></pre>\n\n<p>yields</p>\n\n<pre><code>                               Clint   Gibbon  Orangutan   Rhesus    Susie\ncount augCGP                  2338.0   4178.0     5753.0   4239.0   2740.0\n      augTM                   2888.0   4313.0     3656.0   5114.0   2894.0\n      augTM,augTMR            1441.0   3882.0     3520.0   3357.0   2789.0\n      augTM,augTMR,transMap   8725.0   5839.0     6567.0   6296.0  10196.0\n      augTM,transMap         17341.0   6828.0     6568.0  11563.0  10821.0\n      augTMR                  2881.0   6550.0     5952.0   4217.0   5399.0\n      transMap               39284.0  44285.0    46113.0  39930.0  41300.0\n</code></pre>\n"}, "40360166": {"last_activity_date": 1478003631, "owner": {"reputation": 1617, "accept_rate": 68, "user_type": "registered", "link": "http://stackoverflow.com/users/761132/maverick-mrt", "display_name": "Maverick_Mrt", "profile_image": "https://www.gravatar.com/avatar/fa462ba2bc6318a8b2e7662bb8e91aa1?s=128&d=identicon&r=PG", "user_id": 761132}, "is_accepted": false, "question_id": 40359585, "creation_date": 1478003631, "score": 0, "answer_id": 40360166, "body": "<p>Try this:</p>\n\n<pre><code>(?=^[A-Za-z-' ]{1,35}$)(?=.*\\w{2,}\\s.*\\w{2,}).*\n</code></pre>\n\n<p><a href=\"https://regex101.com/r/lMSpe7/11\" rel=\"nofollow noreferrer\">Explanation</a></p>\n"}, "39529745": {"last_activity_date": 1474023239, "creation_date": 1474023239, "is_accepted": true, "question_id": 39472986, "owner": {"reputation": 2125, "display_name": "Marcin Mo\u017cejko", "user_type": "registered", "link": "http://stackoverflow.com/users/5974433/marcin-mo%c5%bcejko", "user_id": 5974433, "profile_image": "https://www.gravatar.com/avatar/b1d3fa18d71e5ab0d40c64b671c46472?s=128&d=identicon&r=PG&f=1", "accept_rate": 60}, "score": 1, "answer_id": 39529745, "body": "<p>Please notice that you are missing a <code>border_mode</code> option in pre-last convolution layer.</p>\n\n<pre><code>from keras.layers import Input, Dense, Convolution2D, MaxPooling2D, UpSampling2D\nfrom keras.models import Model\n\ninput_img = Input(shape=(1, 28, 28))\n\nx = Convolution2D(16, 3, 3, activation='relu', border_mode='same')(input_img)\nx = MaxPooling2D((2, 2), border_mode='same')(x)\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(x)\nx = MaxPooling2D((2, 2), border_mode='same')(x)\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(x)\nencoded = MaxPooling2D((2, 2), border_mode='same')(x)\n\n# at this point the representation is (8, 4, 4) i.e. 128-dimensional\n\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(encoded)\nx = UpSampling2D((2, 2))(x)\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(x)\nx = UpSampling2D((2, 2))(x)\nx = Convolution2D(16, 3, 3, activation='relu', border_mode='same')(x)\nx = UpSampling2D((2, 2))(x)\ndecoded = Convolution2D(1, 3, 3, activation='sigmoid', border_mode='same')(x)\n\nautoencoder = Model(input_img, decoded)\nautoencoder.compile(optimizer='adadelta', loss='binary_crossentropy')\n</code></pre>\n\n<p>This should work fine</p>\n"}, "40208039": {"last_activity_date": 1477258699, "creation_date": 1477258699, "is_accepted": true, "question_id": 40207716, "owner": {"reputation": 145, "display_name": "Edward", "user_type": "registered", "link": "http://stackoverflow.com/users/5998425/edward", "user_id": 5998425, "profile_image": "https://graph.facebook.com/10205889022649144/picture?type=large", "accept_rate": 90}, "score": 0, "answer_id": 40208039, "body": "<p>I've done as below. It works</p>\n\n<pre><code>import numpy as np\nimport pandas as pd\nfrom scipy import sparse\n\nX1 = sparse.rand(10, 10000)\ndf = pd.DataFrame({ 'a': range(10)})\n\nX2 = df['a'].reset_index()\nX2 = X2.iloc[:,[1]].values\n\nX = sparse.hstack((X1,X2))\n</code></pre>\n"}, "40352969": {"last_activity_date": 1477964033, "creation_date": 1477964033, "is_accepted": true, "question_id": 40352860, "owner": {"reputation": 24216, "display_name": "Steven Rumbalski", "user_type": "registered", "link": "http://stackoverflow.com/users/1322401/steven-rumbalski", "user_id": 1322401, "profile_image": "https://www.gravatar.com/avatar/142cc2ccd5606eaac6ede2f48c4c60e9?s=128&d=identicon&r=PG", "accept_rate": 100}, "score": 2, "answer_id": 40352969, "body": "<p>You're forgetting the whitespace before the opening parentheses in your pattern: <code>to_replace=r\"\\s\\(.*\\)\"</code></p>\n"}, "40350419": {"last_activity_date": 1477949481, "creation_date": 1477947231, "last_edit_date": 1477949481, "question_id": 40350268, "owner": {"reputation": 7014, "display_name": "Julien Spronck", "user_type": "registered", "link": "http://stackoverflow.com/users/2184364/julien-spronck", "profile_image": "https://www.gravatar.com/avatar/fe15cfa3ec22be57f1762ba905c8eb70?s=128&d=identicon&r=PG", "user_id": 2184364}, "score": 0, "answer_id": 40350419, "body": "<pre><code>def border_around(lst):\n    ncols = max(len(row) for row in lst)+2\n    first = '#' * ncols + '\\n'\n    last = '\\n' + '#' * ncols\n    return first + '\\n'.join('#'+''.join(row)+('#' if 'A' not in row else '.') for row in lst) + last\n</code></pre>\n", "is_accepted": true}, "40346721": {"last_activity_date": 1477932515, "creation_date": 1477932515, "is_accepted": true, "question_id": 38700058, "owner": {"reputation": 131, "display_name": "Silviu Tofan", "user_type": "registered", "link": "http://stackoverflow.com/users/5784297/silviu-tofan", "user_id": 5784297, "profile_image": "https://www.gravatar.com/avatar/6ca3e35daa9949f17b342d149d07c1cc?s=128&d=identicon&r=PG&f=1", "accept_rate": 89}, "score": 0, "answer_id": 40346721, "body": "<p>Managed to solve this meanwhile, in case it helps anyone else out:</p>\n\n<pre><code>ax1 = sns.boxplot(data = meta, x = 'Time', y = 'PRS', color = '#880BDD', linewidth=0.8)\nax1 = sns.boxplot(data = meta, x = 'Time', y = 'EA', color = '#0BC9DD', linewidth=0.8)\nax1 = sns.boxplot(data = meta, x = 'Time', y = 'ERS', color = '#9BD19D', linewidth=0.8)\nax1 = sns.pointplot(data = simple, x = 'Time', y = 'Greedy Average', color='#FFC48C', markers ='s', join=False)\nax1 = sns.pointplot(data = simple, x = 'Time', y = 'Greedy Total', color='#FF9F80', markers='o', join=False)\nax1 = sns.pointplot(data = simple, x = 'Time', y = 'Greedy Weeks', color='#F56991', markers='*', join=False)\nax1.set(xlabel = \"Planning Horizon (weeks)\")\nax1.set(ylabel = \"Hypervolume\")\nEA = mpatches.Patch(color='#0BC9DD', label = 'EA')\nPRS = mpatches.Patch(color='#880BDD', label = 'PRS')\nERS = mpatches.Patch(color='#9BD19D', label = 'ERS')\nGA = mlines.Line2D([], [], color='#FFC48C', marker = 's', label = 'Greedy Average')\nGT = mlines.Line2D([], [],color='#FF9F80', label = 'Greedy Total', marker = 'o')\nGW = mlines.Line2D([], [],color='#F56991', label = 'Greedy Weeks', marker = '*')\nplt.legend(handles = [EA, ERS, PRS, GA, GT, GW], loc = 'bottom left', title = \"Algorithm\")\nax1.set_title(\"Algorithm Comparison\")\n</code></pre>\n\n<p>Results in this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/byHUC.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/byHUC.png\" alt=\"enter image description here\"></a></p>\n"}, "40349709": {"last_activity_date": 1477944501, "creation_date": 1477944196, "last_edit_date": 1477944501, "question_id": 40349609, "owner": {"reputation": 67, "display_name": "Jakub", "user_type": "registered", "link": "http://stackoverflow.com/users/5666087/jakub", "user_id": 5666087, "profile_image": "https://www.gravatar.com/avatar/0eeb62bd4c02b40a8751ab3368368d02?s=128&d=identicon&r=PG&f=1", "accept_rate": 100}, "score": 0, "answer_id": 40349709, "body": "<p><a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.set_index.html\" rel=\"nofollow\">pandas.DataFrame.set_index</a></p>\n\n<p>Assuming your dataframe is variable <code>df</code>:</p>\n\n<pre><code># not in-place\ndf = df.set_index(0)\n\n# in-place\ndf.set_index(0, inplace=True)\n</code></pre>\n", "is_accepted": true}, "40360176": {"last_activity_date": 1478003647, "owner": {"reputation": 54, "display_name": "Rohit Reddy Abbadi", "user_type": "registered", "link": "http://stackoverflow.com/users/4997688/rohit-reddy-abbadi", "profile_image": "https://www.gravatar.com/avatar/209d0726091225068e93f458fa6d7ef6?s=128&d=identicon&r=PG&f=1", "user_id": 4997688}, "is_accepted": false, "question_id": 40359897, "creation_date": 1478003647, "score": 0, "answer_id": 40360176, "body": "<p>An observable must be subscribed. Since it is asynchronous, it returns undefined, and that is what is being assigned to <code>this.list</code> in your code.\nInstead subscribe:</p>\n\n<pre><code>constructor(http: Http) {\n  this.getData().subscribe(\n        res =&gt; this.list = res,\n        err = &gt; console.log(err) /*handle error*/\n    );\n}\n</code></pre>\n"}, "40360177": {"last_activity_date": 1478003648, "owner": {"reputation": 2671, "accept_rate": 51, "user_type": "registered", "link": "http://stackoverflow.com/users/1256909/rejoanul-alam", "display_name": "Rejoanul Alam", "profile_image": "https://i.stack.imgur.com/QGGko.png?s=128&g=1", "user_id": 1256909}, "is_accepted": false, "question_id": 40358048, "creation_date": 1478003648, "score": 0, "answer_id": 40360177, "body": "<p>If you need simple php solution then try this code</p>\n\n<pre><code>$('.btn').on('click', function(e)  {\n    var targeted_popup_class = jQuery(this).attr('data-popup-open');\n    $('[data-popup=\"' + targeted_popup_class + '\"]').fadeIn(350);\n\n        var leadID = $(this).attr('data-id');\n        $.ajax({\n            type: \"POST\",  \n            dataType: 'text',\n            url: \"index.php\",  \n            data: {\n                leadID : leadID\n            }\n            success: function(response) {\n               alert(response);\n            }\n        }); \n    });\n</code></pre>\n\n<p>Now in <code>index.php</code></p>\n\n<pre><code>$leadID = intval($_POST['leadID']);\n$sql = 'select Note from '.$dbPre.'users where leadID='.$leadID;  \n$exists = $db-&gt;extQueryRowObj($sql);\n$displaynote = $exists-&gt;Note;\necho $displaynote;\n</code></pre>\n"}, "40351926": {"last_activity_date": 1477957015, "owner": {"reputation": 1889, "display_name": "Abdou", "user_type": "registered", "link": "http://stackoverflow.com/users/3135417/abdou", "profile_image": "https://www.gravatar.com/avatar/1b989009ea961e780793f80ea6d53240?s=128&d=identicon&r=PG&f=1", "user_id": 3135417}, "last_edit_date": 1477957015, "question_id": 40351370, "creation_date": 1477955558, "score": 1, "answer_id": 40351926, "body": "<p>You can try the following if you don't mind changing things a little bit:</p>\n\n<pre><code>from functools import reduce\nfrom itertools import takewhile\n\n\ndef length_of_row(symbol, lot):\n    if symbol not in reduce(lambda x,y: x+y, lot):\n        return 0\n    elif symbol in lot[0]:\n        good_lot =  map(lambda y: y.count(symbol),takewhile(lambda x: symbol in x, lot))\n        return sum(good_lot)\n    else:\n        return length_of_row(symbol, lot[1:])\n</code></pre>\n\n<p>This uses a combination of recursion and one of python's powerful <a href=\"https://docs.python.org/3/library/itertools.html#module-itertools\" rel=\"nofollow\"><code>itertools</code></a> methods (<a href=\"https://docs.python.org/3/library/itertools.html#itertools.takewhile\" rel=\"nofollow\"><code>takewhile</code></a>). The idea is to count the number of symbols until you hit a list that does not contain that symbol. Also, it tries to make sure that it only counts the occurrences of the symbol if said symbol is in the list of lists.</p>\n\n<p>Using it:</p>\n\n<pre><code>lst = [['.', '.', '.', 'e'],\n ['A', 'A', '.', 'e'],\n ['.', '.', '.', 'e'],\n ['.', 'X', 'X', 'X'],\n ['.', '.', '.', '.'],\n ['.', '.', '.', 'e']]\n\nprint(length_of_row('e', lst))\nprint(length_of_row('X', lst))\nprint(length_of_row('A', lst))\nprint(length_of_row('f', lst))\n\n#3\n#3\n#2\n#0\n</code></pre>\n\n<p>As you can see, if the symbol does not exist it returns <code>0</code>.</p>\n\n<h3>Edit:</h3>\n\n<p>If you don't wish to import the <code>takewhile</code> function from <code>itertools</code>, you can use the approximate definition provided in the documentation. But just keep in mind that it is not as optimized as the <code>itertools</code> method:</p>\n\n<pre><code>def takewhile(predicate, iterable):\n    for x in iterable:\n        if predicate(x):\n            yield x\n        else:\n            break\n</code></pre>\n\n<p>Also, <code>reduce</code> should be available to you directly if you are using <code>python2</code>. However, you can define a function to reduce a list of lists into one list as follows:</p>\n\n<pre><code>def reduce_l_of_l(lst_of_lst):\n    out_lst = []\n    for lst in lst_of_lst:\n        out_lst += lst\n    return out_lst\n</code></pre>\n\n<p>Instead of using <code>reduce</code>, just replace it with <code>reduce_l_of_l</code> after it's been defined.</p>\n\n<p>I hope this helps.</p>\n", "is_accepted": true}, "40360180": {"last_activity_date": 1478003654, "owner": {"reputation": 825, "accept_rate": 75, "user_type": "registered", "link": "http://stackoverflow.com/users/4991677/fdavidov", "display_name": "FDavidov", "profile_image": "https://www.gravatar.com/avatar/7dabe78477c4b3697c3284fb556b1eca?s=128&d=identicon&r=PG&f=1", "user_id": 4991677}, "is_accepted": false, "question_id": 40360035, "creation_date": 1478003654, "score": 0, "answer_id": 40360180, "body": "<p>Assuming that you get (from tables) the GROSS and the VAT rate, you could phrase something like:</p>\n\n<pre><code>  SELECT GROSS, VAT_RATE , (GROSS * VAT_RATE) AS VAT , (GROSS + VAT) AS NET\n    FROM ....\n</code></pre>\n\n<p>There are, of course, other options depending on how and where from you get the data.</p>\n"}, "40351726": {"last_activity_date": 1477954269, "owner": {"reputation": 444, "accept_rate": 57, "user_type": "registered", "link": "http://stackoverflow.com/users/5050926/styko", "display_name": "styko", "profile_image": "https://i.stack.imgur.com/CI6b8.jpg?s=128&g=1", "user_id": 5050926}, "is_accepted": true, "question_id": 40351686, "creation_date": 1477954269, "score": 1, "answer_id": 40351726, "body": "<p><code>range(a, b)</code> (or <code>xrange</code>) iterates from <code>a</code> to <code>b-1</code> included. So the loop with <code>xrange(1,n-1)</code> will run <code>n-2</code> times.</p>\n\n<p>Look at <a href=\"https://docs.python.org/2/library/functions.html#range\" rel=\"nofollow\">the docs</a>!</p>\n"}, "40347964": {"last_activity_date": 1477937806, "creation_date": 1477937271, "last_edit_date": 1477937806, "question_id": 40347660, "owner": {"reputation": 61488, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 1, "answer_id": 40347964, "body": "<p>I think you can use:</p>\n\n<pre><code>mask1 = (df.Msgtype == 'accept')\nmask = mask1.groupby([df.ConvID]).apply(lambda x: x.shift().fillna(False).cumsum()) == 0\n\nprint (df[mask].sort_values(['ConvID','Date']))\n   Msgtype  Date  ConvID                message\n0  enquire  12/1     689        I want your car\n1    reply  12/3     689        it is available\n2    reply  12/4     689           rent please?\n3    reply  12/6     689                   $200\n4   accept  12/8     689  please pay through CC\n7  enquire  12/3     690        Looking for car\n8    reply  12/4     690              available\n9   accept  12/5     690                   paid\n</code></pre>\n\n<p>Explanations:</p>\n\n<pre><code>#mask where is 'accept'\nmask1 = (df.Msgtype == 'accept')\nprint (mask1)\n0     False\n1     False\n2     False\n3     False\n4      True\n5     False\n6     False\n7     False\n8     False\n9      True\n10    False\nName: Msgtype, dtype: bool\n\n#per group shift, replace NaN by False and cumulative sum\nprint (mask1.groupby([df.ConvID]).apply(lambda x: x.shift().fillna(False).cumsum()))\n0     0\n1     0\n2     0\n3     0\n4     0\n5     1\n6     1\n7     0\n8     0\n9     0\n10    1\nName: Msgtype, dtype: int32\n</code></pre>\n\n\n\n<pre><code>#where output of groupby is 0 \nmask = mask1.groupby([df.ConvID]).apply(lambda x: x.shift().fillna(False).cumsum()) == 0\nprint (mask)\n0      True\n1      True\n2      True\n3      True\n4      True\n5     False\n6     False\n7      True\n8      True\n9      True\n10    False\nName: Msgtype, dtype: bool\n\n#boolean indexing and sorting\nprint (df[mask].sort_values(['ConvID','Date']))\n   Msgtype  Date  ConvID                message\n0  enquire  12/1     689        I want your car\n1    reply  12/3     689        it is available\n2    reply  12/4     689           rent please?\n3    reply  12/6     689                   $200\n4   accept  12/8     689  please pay through CC\n7  enquire  12/3     690        Looking for car\n8    reply  12/4     690              available\n9   accept  12/5     690                   paid\n</code></pre>\n", "is_accepted": true}, "40360183": {"last_activity_date": 1478003667, "owner": {"reputation": 4996, "accept_rate": 74, "user_type": "registered", "link": "http://stackoverflow.com/users/405623/shershen", "display_name": "shershen", "profile_image": "https://www.gravatar.com/avatar/cdf09a1628df619e523dbbedfb0e07f3?s=128&d=identicon&r=PG", "user_id": 405623}, "is_accepted": false, "question_id": 40359464, "creation_date": 1478003667, "score": 0, "answer_id": 40360183, "body": "<p>Setup can be fixed by following:</p>\n\n<p>1) as <a href=\"http://stackoverflow.com/users/942852/nitzan-tomer\">@Nitzan Tommer</a> mentioned - change <strong>.ts to .js in System.import</strong> block</p>\n\n<pre><code>index.html: System.import('bootstrap.js')\n</code></pre>\n\n<p>2) <strong>(SystemJS) require is not defined</strong> error is fixed by <a href=\"http://stackoverflow.com/questions/34730010/angular2-5-minute-install-bug-require-is-not-defined\">this post</a> - \nchange tsconfig.json to have \"system\" as modules</p>\n\n<pre><code>{\n    \"compilerOptions\": {\n        \"module\": \"system\",\n        \"target\": \"es5\",\n//..\n</code></pre>\n"}, "40204493": {"last_activity_date": 1477236549, "creation_date": 1477235684, "last_edit_date": 1477236549, "question_id": 40204471, "owner": {"reputation": 138198, "display_name": "&#211;scar L&#243;pez", "user_type": "registered", "link": "http://stackoverflow.com/users/201359/%c3%93scar-l%c3%b3pez", "user_id": 201359, "profile_image": "https://i.stack.imgur.com/t7odj.jpg?s=128&g=1", "accept_rate": 100}, "score": 2, "answer_id": 40204493, "body": "<p>There's a leading space in the string:</p>\n\n<pre><code>' 1:00:00'\n</code></pre>\n\n<p>Do this:</p>\n\n<pre><code>dfp['time'] = pd.to_datetime(dfp['time'].strip(), format='%H:%M:%S')\n</code></pre>\n", "is_accepted": true}, "40006920": {"last_activity_date": 1476301181, "creation_date": 1476300880, "last_edit_date": 1476301181, "question_id": 40004858, "owner": {"reputation": 41225, "display_name": "Artjom B.", "user_type": "registered", "link": "http://stackoverflow.com/users/1816580/artjom-b", "profile_image": "https://www.gravatar.com/avatar/f30e6b41f1e2bd48b058e8e72c1f0f57?s=128&d=identicon&r=PG", "user_id": 1816580}, "score": 1, "answer_id": 40006920, "body": "<p>The <a href=\"https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Feedback_.28CFB.29\" rel=\"nofollow\">Cipher Feedback (CFB) mode of operation</a> is a family of modes. It is parametrized by the segment size (or register size). PyCrypto has a default <a href=\"https://github.com/dlitz/pycrypto/blob/v2.6.1/src/block_template.c#L182\" rel=\"nofollow\">segment size of 8 bit</a> and Java (actually OpenJDK) has a default segment size the <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/com/sun/crypto/provider/CipherCore.java#228\" rel=\"nofollow\">same as the block size</a> (128 bit for AES).</p>\n\n<p>If you want CFB-128 in pycrypto, you can use <code>AES.new(key, AES.MODE_CFB, iv, segment_size=128)</code>. If you want CFB-8 in Java, you can use <code>Cipher.getInstance(\"AES/CFB8/NoPadding\");</code>.</p>\n\n<hr>\n\n<p>Now that we have that out the way, you have other problems:</p>\n\n<ul>\n<li><p>Always specify the character set you're using, because it can change between different JVMs: <code>new String(someBytes, \"UTF-8\")</code> and <code>someString.getBytes(\"UTF-8\")</code>. When you do, be consistent.</p></li>\n<li><p>Never use a String to store binary data (<code>new String(encrypted_decoded_bytes);</code>). You can copy the bytes directly: <code>IvParameterSpec iv = new IvParameterSpec(Arrays.copyOf(encrypted_decoded_bytes, 16));</code> and <code>cipher.doFinal(Arrays.copyOfRange(encrypted_decoded_bytes, 16, encrypted_decoded_bytes.length))</code>.</p></li>\n<li><p>In Java, you're assuming that the IV is written in front of the ciphertext and then encoded together, but in Python, you're never doing anything with the IV. I guess you posted incomplete code.</p></li>\n<li><p>It is crucial for CFB mode to use a <strong>different</strong> IV every time if the key stays the same. If you don't change the IV for every encryption, you will create a multi-time pad which enables an attacker to deduce the plaintext even without knowing the key.</p></li>\n</ul>\n", "is_accepted": true}, "40217249": {"last_activity_date": 1477309394, "creation_date": 1477308553, "last_edit_date": 1477309394, "question_id": 40217043, "owner": {"reputation": 61498, "display_name": "jezrael", "user_type": "registered", "link": "http://stackoverflow.com/users/2901002/jezrael", "user_id": 2901002, "profile_image": "https://i.stack.imgur.com/hMDvl.jpg?s=128&g=1", "accept_rate": 89}, "score": 2, "answer_id": 40217249, "body": "<p>I think you need <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html\" rel=\"nofollow\"><code>groupby</code></a> and apply <a href=\"http://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing\" rel=\"nofollow\"><code>boolean indexing</code></a> :</p>\n\n<pre><code>print (df.groupby('uid').apply(lambda x: x[(x.b.isin(x.a))|(x.a.isin(x.b))]))\n        uid   a   b\nuid                \n111 0   111   1   2\n    1   111   2   3\n    2   111   4   5\n    4   111   5   8\n222 6   222  11  12\n    7   222  13  11\n333 9   333  14  16\n    11  333  16  19\n444 13  444  21  20\n    14  444   9   5\n    15  444  20  24\n    16  444   5   6\n\nprint (df.groupby('uid')\n         .apply(lambda x: x[(x.b.isin(x.a))|(x.a.isin(x.b))])\n         .reset_index(drop=True))\n    uid   a   b\n0   111   1   2\n1   111   2   3\n2   111   4   5\n3   111   5   8\n4   222  11  12\n5   222  13  11\n6   333  14  16\n7   333  16  19\n8   444  21  20\n9   444   9   5\n10  444  20  24\n11  444   5   6\n</code></pre>\n", "is_accepted": true}, "40221182": {"last_activity_date": 1477319923, "creation_date": 1477319923, "is_accepted": true, "question_id": 40221110, "owner": {"reputation": 81845, "display_name": "EdChum", "user_type": "registered", "link": "http://stackoverflow.com/users/704848/edchum", "profile_image": "https://www.gravatar.com/avatar/3f9be2c2958e208c8d9b629ac43c9c42?s=128&d=identicon&r=PG", "user_id": 704848}, "score": 5, "answer_id": 40221182, "body": "<p>It's because it's a <code>str</code> change it to float using <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.astype.html\"><code>astype</code></a>:</p>\n\n<pre><code>transactions['exec_price'] = transactions['exec_price'].astype(float)\n</code></pre>\n\n<p>or safer use <a href=\"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_numeric.html\"><code>to_numeric</code></a> to handle any duff values:</p>\n\n<pre><code>transactions['exec_price'] = pd.to_numeric(transactions['exec_price'], errors='coerce')\n</code></pre>\n\n<p>When you multiply a str column it just repeats the string contents by that scalar value</p>\n"}, "40350988": {"last_activity_date": 1477953041, "creation_date": 1477949880, "last_edit_date": 1477953041, "question_id": 40350890, "owner": {"reputation": 15195, "display_name": "Jean-Fran&#231;ois Fabre", "user_type": "registered", "link": "http://stackoverflow.com/users/6451573/jean-fran%c3%a7ois-fabre", "user_id": 6451573, "profile_image": "https://i.stack.imgur.com/zE16s.jpg?s=128&g=1", "accept_rate": 83}, "score": 1, "answer_id": 40350988, "body": "<p>if your program <code>FileProcessor.jar</code> doesn't have a special case to output to standard output, there's nothing much you can do (but write to a temporary file and read it again, but that's cheating :).</p>\n\n<p>Most nice commands (Unix commands for instance) either dump data to stdout when the <code>-o</code> option is omitted, or when <code>-o</code> option has <code>-</code> value (dash).</p>\n\n<p>if you cannot modify your program you can fool the program into believing it's writing on a file whereas it's writing on the console:</p>\n\n<ol>\n<li><p>Linux/UNIX:</p>\n\n<ul>\n<li>get current <code>tty</code> with <code>tty</code> command. Ex: <code>/dev/pts/2</code></li>\n<li>pass that to your program</li>\n<li>read standard output</li>\n</ul></li>\n<li><p>Windows:</p>\n\n<ul>\n<li>use <code>CON</code> as output file name</li>\n<li>read standard output</li>\n</ul></li>\n</ol>\n", "is_accepted": true}, "40360190": {"last_activity_date": 1478003706, "owner": {"reputation": 384, "display_name": "richplane", "user_type": "registered", "link": "http://stackoverflow.com/users/2271023/richplane", "profile_image": "https://i.stack.imgur.com/qCq1w.jpg?s=128&g=1", "user_id": 2271023}, "is_accepted": false, "question_id": 39834677, "creation_date": 1478003706, "score": 0, "answer_id": 40360190, "body": "<p>PayPal acknowledged that this is a problem. </p>\n\n<p>I posted this on PayPal's community boards and (eventually) got a response: </p>\n\n<blockquote>\n  <p>\"We are aware of this and raised this internally. At the moment the\n  system doesn't send an IPN in this scenario. There is an ask in with\n  our development teams to have an IPN issued once the IC+ payment\n  clears, unfortunately I don't have an ETA though\"</p>\n</blockquote>\n\n<p>See <a href=\"https://www.paypal-community.com/t5/IPN-PDT/IPN-sends-Pending-status-and-nothing-further/m-p/1119362?profile.language=en\" rel=\"nofollow noreferrer\">https://www.paypal-community.com/t5/IPN-PDT/IPN-sends-Pending-status-and-nothing-further/m-p/1119362?profile.language=en</a></p>\n\n<p>I'll update this answer if I hear more.</p>\n"}, "40352504": {"last_activity_date": 1477960093, "owner": {"reputation": 7332, "accept_rate": 55, "user_type": "registered", "link": "http://stackoverflow.com/users/2482744/alex-hall", "display_name": "Alex Hall", "profile_image": "https://www.gravatar.com/avatar/da280aaf6b5a9e6fbdf13089d4e5fa03?s=128&d=identicon&r=PG", "user_id": 2482744}, "is_accepted": true, "question_id": 40352434, "creation_date": 1477960093, "score": 0, "answer_id": 40352504, "body": "<p>You need to extract the contents of the tag and then return it wrapped in a response, like so:</p>\n\n<pre><code>return HttpResponse(asd.find('coberturaSocial').text)\n</code></pre>\n"}}